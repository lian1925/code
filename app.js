(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{"+LKy":function(n,e,t){"use strict";var a,r=this&&this.__extends||(a=function(n,e){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}a(n,e),n.prototype=null===e?Object.create(e):(t.prototype=e.prototype,new t)});Object.defineProperty(e,"__esModule",{value:!0});var o=t("q1tI"),s=t("0Xwh"),i=t("B+IG"),c=t("p1ld"),l=t("OCm5"),p=t("xXJP");t("Iw/T");var u=p.searchPostList("");console.log(u);var b=function(n){function e(){return null!==n&&n.apply(this,arguments)||this}return r(e,n),e.prototype.render=function(){var n=p.homePostList(10,1);console.log(n);var e=p.siteBaseInfo();return o.createElement("div",null,o.createElement(s.default,{type:["top","bottom"],ease:["easeOutQuart","easeInOutQuart"]},o.createElement(i.default,{key:"a",title:e.title,description:e.description}),o.createElement(c.default,{key:"b",postList:n}),o.createElement(l.default,{key:"c",copyright:e.copyright,expire:e.expire})))},e}(o.Component);e.default=b},"0TFo":function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a={lunarInfo:[19416,19168,42352,21717,53856,55632,91476,22176,39632,21970,19168,42422,42192,53840,119381,46400,54944,44450,38320,84343,18800,42160,46261,27216,27968,109396,11104,38256,21234,18800,25958,54432,59984,28309,23248,11104,100067,37600,116951,51536,54432,120998,46416,22176,107956,9680,37584,53938,43344,46423,27808,46416,86869,19872,42416,83315,21168,43432,59728,27296,44710,43856,19296,43748,42352,21088,62051,55632,23383,22176,38608,19925,19152,42192,54484,53840,54616,46400,46752,103846,38320,18864,43380,42160,45690,27216,27968,44870,43872,38256,19189,18800,25776,29859,59984,27480,23232,43872,38613,37600,51552,55636,54432,55888,30034,22176,43959,9680,37584,51893,43344,46240,47780,44368,21977,19360,42416,86390,21168,43312,31060,27296,44368,23378,19296,42726,42208,53856,60005,54576,23200,30371,38608,19195,19152,42192,118966,53840,54560,56645,46496,22224,21938,18864,42359,42160,43600,111189,27936,44448,84835,37744,18936,18800,25776,92326,59984,27424,108228,43744,41696,53987,51552,54615,54432,55888,23893,22176,42704,21972,21200,43448,43344,46240,46758,44368,21920,43940,42416,21168,45683,26928,29495,27296,44368,84821,19296,42352,21732,53600,59752,54560,55968,92838,22224,19168,43476,41680,53584,62034,54560],solarMonth:[31,28,31,30,31,30,31,31,30,31,30,31],Gan:["甲","乙","丙","丁","戊","己","庚","辛","壬","癸"],Zhi:["子","丑","寅","卯","辰","巳","午","未","申","酉","戌","亥"],Animals:["鼠","牛","虎","兔","龙","蛇","马","羊","猴","鸡","狗","猪"],solarTerm:["小寒","大寒","立春","雨水","惊蛰","春分","清明","谷雨","立夏","小满","芒种","夏至","小暑","大暑","立秋","处暑","白露","秋分","寒露","霜降","立冬","小雪","大雪","冬至"],sTermInfo:["9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf97c3598082c95f8c965cc920f","97bd0b06bdb0722c965ce1cfcc920f","b027097bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf97c359801ec95f8c965cc920f","97bd0b06bdb0722c965ce1cfcc920f","b027097bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf97c359801ec95f8c965cc920f","97bd0b06bdb0722c965ce1cfcc920f","b027097bd097c36b0b6fc9274c91aa","9778397bd19801ec9210c965cc920e","97b6b97bd19801ec95f8c965cc920f","97bd09801d98082c95f8e1cfcc920f","97bd097bd097c36b0b6fc9210c8dc2","9778397bd197c36c9210c9274c91aa","97b6b97bd19801ec95f8c965cc920e","97bd09801d98082c95f8e1cfcc920f","97bd097bd097c36b0b6fc9210c8dc2","9778397bd097c36c9210c9274c91aa","97b6b97bd19801ec95f8c965cc920e","97bcf97c3598082c95f8e1cfcc920f","97bd097bd097c36b0b6fc9210c8dc2","9778397bd097c36c9210c9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf97c3598082c95f8c965cc920f","97bd097bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf97c3598082c95f8c965cc920f","97bd097bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf97c359801ec95f8c965cc920f","97bd097bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf97c359801ec95f8c965cc920f","97bd097bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf97c359801ec95f8c965cc920f","97bd097bd07f595b0b6fc920fb0722","9778397bd097c36b0b6fc9210c8dc2","9778397bd19801ec9210c9274c920e","97b6b97bd19801ec95f8c965cc920f","97bd07f5307f595b0b0bc920fb0722","7f0e397bd097c36b0b6fc9210c8dc2","9778397bd097c36c9210c9274c920e","97b6b97bd19801ec95f8c965cc920f","97bd07f5307f595b0b0bc920fb0722","7f0e397bd097c36b0b6fc9210c8dc2","9778397bd097c36c9210c9274c91aa","97b6b97bd19801ec9210c965cc920e","97bd07f1487f595b0b0bc920fb0722","7f0e397bd097c36b0b6fc9210c8dc2","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf7f1487f595b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf7f1487f595b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf7f1487f531b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf7f1487f531b0b0bb0b6fb0722","7f0e397bd07f595b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c9274c920e","97bcf7f0e47f531b0b0bb0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","9778397bd097c36b0b6fc9210c91aa","97b6b97bd197c36c9210c9274c920e","97bcf7f0e47f531b0b0bb0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","9778397bd097c36b0b6fc9210c8dc2","9778397bd097c36c9210c9274c920e","97b6b7f0e47f531b0723b0b6fb0722","7f0e37f5307f595b0b0bc920fb0722","7f0e397bd097c36b0b6fc9210c8dc2","9778397bd097c36b0b70c9274c91aa","97b6b7f0e47f531b0723b0b6fb0721","7f0e37f1487f595b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc9210c8dc2","9778397bd097c36b0b6fc9274c91aa","97b6b7f0e47f531b0723b0b6fb0721","7f0e27f1487f595b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b7f0e47f531b0723b0787b0721","7f0e27f0e47f531b0b0bb0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","9778397bd097c36b0b6fc9210c91aa","97b6b7f0e47f149b0723b0787b0721","7f0e27f0e47f531b0723b0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","9778397bd097c36b0b6fc9210c8dc2","977837f0e37f149b0723b0787b0721","7f07e7f0e47f531b0723b0b6fb0722","7f0e37f5307f595b0b0bc920fb0722","7f0e397bd097c35b0b6fc9210c8dc2","977837f0e37f14998082b0787b0721","7f07e7f0e47f531b0723b0b6fb0721","7f0e37f1487f595b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc9210c8dc2","977837f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc920fb0722","977837f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc920fb0722","977837f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","977837f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","977837f0e37f14998082b0787b06bd","7f07e7f0e47f149b0723b0787b0721","7f0e27f0e47f531b0b0bb0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","977837f0e37f14998082b0723b06bd","7f07e7f0e37f149b0723b0787b0721","7f0e27f0e47f531b0723b0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","977837f0e37f14898082b0723b02d5","7ec967f0e37f14998082b0787b0721","7f07e7f0e47f531b0723b0b6fb0722","7f0e37f1487f595b0b0bb0b6fb0722","7f0e37f0e37f14898082b0723b02d5","7ec967f0e37f14998082b0787b0721","7f07e7f0e47f531b0723b0b6fb0722","7f0e37f1487f531b0b0bb0b6fb0722","7f0e37f0e37f14898082b0723b02d5","7ec967f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e37f1487f531b0b0bb0b6fb0722","7f0e37f0e37f14898082b072297c35","7ec967f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e37f0e37f14898082b072297c35","7ec967f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e37f0e366aa89801eb072297c35","7ec967f0e37f14998082b0787b06bd","7f07e7f0e47f149b0723b0787b0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e37f0e366aa89801eb072297c35","7ec967f0e37f14998082b0723b06bd","7f07e7f0e47f149b0723b0787b0721","7f0e27f0e47f531b0723b0b6fb0722","7f0e37f0e366aa89801eb072297c35","7ec967f0e37f14998082b0723b06bd","7f07e7f0e37f14998083b0787b0721","7f0e27f0e47f531b0723b0b6fb0722","7f0e37f0e366aa89801eb072297c35","7ec967f0e37f14898082b0723b02d5","7f07e7f0e37f14998082b0787b0721","7f07e7f0e47f531b0723b0b6fb0722","7f0e36665b66aa89801e9808297c35","665f67f0e37f14898082b0723b02d5","7ec967f0e37f14998082b0787b0721","7f07e7f0e47f531b0723b0b6fb0722","7f0e36665b66a449801e9808297c35","665f67f0e37f14898082b0723b02d5","7ec967f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e36665b66a449801e9808297c35","665f67f0e37f14898082b072297c35","7ec967f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e26665b66a449801e9808297c35","665f67f0e37f1489801eb072297c35","7ec967f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722"],nStr1:["日","一","二","三","四","五","六","七","八","九","十"],nStr2:["初","十","廿","卅"],nStr3:["正","二","三","四","五","六","七","八","九","十","冬","腊"],lYearDays:function(n){var e,t=348;for(e=32768;e>8;e>>=1)t+=this.lunarInfo[n-1900]&e?1:0;return t+this.leapDays(n)},leapMonth:function(n){return 15&this.lunarInfo[n-1900]},leapDays:function(n){return this.leapMonth(n)?65536&this.lunarInfo[n-1900]?30:29:0},monthDays:function(n,e){return e>12||e<1?-1:this.lunarInfo[n-1900]&65536>>e?30:29},solarDays:function(n,e){if(e>12||e<1)return-1;var t=e-1;return 1==t?n%4==0&&n%100!=0||n%400==0?29:28:this.solarMonth[t]},toGanZhiYear:function(n){var e=(n-3)%10,t=(n-3)%12;return 0==e&&(e=10),0==t&&(t=12),this.Gan[e-1]+this.Zhi[t-1]},toAstro:function(n,e){return"魔羯水瓶双鱼白羊金牛双子巨蟹狮子处女天秤天蝎射手魔羯".substr(2*n-(e<[20,19,21,21,21,22,23,23,23,23,22,22][n-1]?2:0),2)+"座"},toGanZhi:function(n){return this.Gan[n%10]+this.Zhi[n%12]},getTerm:function(n,e){if(n<1900||n>2100)return-1;if(e<1||e>24)return-1;var t=this.sTermInfo[n-1900],a=[parseInt("0x"+t.substr(0,5)).toString(),parseInt("0x"+t.substr(5,5)).toString(),parseInt("0x"+t.substr(10,5)).toString(),parseInt("0x"+t.substr(15,5)).toString(),parseInt("0x"+t.substr(20,5)).toString(),parseInt("0x"+t.substr(25,5)).toString()],r=[a[0].substr(0,1),a[0].substr(1,2),a[0].substr(3,1),a[0].substr(4,2),a[1].substr(0,1),a[1].substr(1,2),a[1].substr(3,1),a[1].substr(4,2),a[2].substr(0,1),a[2].substr(1,2),a[2].substr(3,1),a[2].substr(4,2),a[3].substr(0,1),a[3].substr(1,2),a[3].substr(3,1),a[3].substr(4,2),a[4].substr(0,1),a[4].substr(1,2),a[4].substr(3,1),a[4].substr(4,2),a[5].substr(0,1),a[5].substr(1,2),a[5].substr(3,1),a[5].substr(4,2)];return parseInt(r[e-1])},toChinaMonth:function(n){if(n>12||n<1)return-1;var e=this.nStr3[n-1];return e+="月"},toChinaDay:function(n){var e;switch(n){case 10:e="初十";break;case 20:e="二十";break;case 30:e="三十";break;default:e=this.nStr2[Math.floor(n/10)],e+=this.nStr1[n%10]}return e},getAnimal:function(n){return this.Animals[(n-4)%12]},solar2lunar:function(n,e,t){if(n<1900||n>2100)return-1;if(1900==n&&1==e&&t<31)return-1;if(n)a=new Date(n,parseInt(e)-1,t);else var a=new Date;var r,o,s=0;n=a.getFullYear(),e=a.getMonth()+1,t=a.getDate();var i=(Date.UTC(a.getFullYear(),a.getMonth(),a.getDate())-Date.UTC(1900,0,31))/864e5;for(r=1900;r<2101&&i>0;r++)i-=s=this.lYearDays(r);i<0&&(i+=s,r--);var c=new Date,l=!1;c.getFullYear()==n&&c.getMonth()+1==e&&c.getDate()==t&&(l=!0);var p=a.getDay(),u=this.nStr1[p];0==p&&(p=7);var b=r;o=this.leapMonth(r);var d=!1;for(r=1;r<13&&i>0;r++)o>0&&r==o+1&&0==d?(--r,d=!0,s=this.leapDays(b)):s=this.monthDays(b,r),1==d&&r==o+1&&(d=!1),i-=s;0==i&&o>0&&r==o+1&&(d?d=!1:(d=!0,--r)),i<0&&(i+=s,--r);var f=r,m=i+1,g=e-1,h=this.toGanZhiYear(b),x=this.getTerm(n,2*e-1),y=this.getTerm(n,2*e),v=this.toGanZhi(12*(n-1900)+e+11);t>=x&&(v=this.toGanZhi(12*(n-1900)+e+12));var w=!1,j=null;x==t&&(w=!0,j=this.solarTerm[2*e-2]),y==t&&(w=!0,j=this.solarTerm[2*e-1]);var k=Date.UTC(n,g,1,0,0,0,0)/864e5+25567+10,A=this.toGanZhi(k+t-1),S=this.toAstro(e,t);return{lYear:b,lMonth:f,lDay:m,Animal:this.getAnimal(b),IMonthCn:(d?"闰":"")+this.toChinaMonth(f),IDayCn:this.toChinaDay(m),cYear:n,cMonth:e,cDay:t,gzYear:h,gzMonth:v,gzDay:A,isToday:l,isLeap:d,nWeek:p,ncWeek:"星期"+u,isTerm:w,Term:j,astro:S}},lunar2solar:function(n,e,t,a){a=!!a;var r=this.leapMonth(n);this.leapDays(n);if(a&&r!=e)return-1;if(2100==n&&12==e&&t>1||1900==n&&1==e&&t<31)return-1;var o=this.monthDays(n,e),s=o;if(a&&(s=this.leapDays(n,e)),n<1900||n>2100||t>s)return-1;for(var i=0,c=1900;c<n;c++)i+=this.lYearDays(c);var l=0,p=!1;for(c=1;c<e;c++)l=this.leapMonth(n),p||l<=c&&l>0&&(i+=this.leapDays(n),p=!0),i+=this.monthDays(n,c);a&&(i+=o);var u=Date.UTC(1900,1,30,0,0,0),b=new Date(864e5*(i+t-31)+u),d=b.getUTCFullYear(),f=b.getUTCMonth()+1,m=b.getUTCDate();return this.solar2lunar(d,f,m)}};e.default=a},"0sVr":function(n,e,t){(n.exports=t("JPst")(!1)).push([n.i,".component-content .inner {\n  width: 700px;\n  margin: 0 auto;\n}\n.component-content .inner .post h2.post-title {\n  text-align: center;\n  font-size: 26px;\n  margin: 0;\n}\n.component-content .inner .post .post-meta {\n  text-align: center;\n  margin-bottom: 60px;\n}\n.component-content .inner .post .post-body {\n  margin-bottom: 60px;\n}\n.component-content .inner .post .post-body h1,\n.component-content .inner .post .post-body h2,\n.component-content .inner .post .post-body h3 {\n  line-height: 1;\n  padding-bottom: 8px;\n  border-bottom: 1px dotted #ccc;\n}\n.component-content .inner .post .post-body h2 {\n  font-size: 20px;\n}\n.component-content .inner .pagination {\n  padding-top: 15px;\n  margin: 120px 0 40px;\n  text-align: center;\n  border-top: 1px solid #eee;\n}\n",""])},"13KQ":function(n,e,t){var a=t("QhgS");"string"==typeof a&&(a=[[n.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t("aET+")(a,r);a.locals&&(n.exports=a.locals)},"2Kwb":function(n){n.exports={title:"Markdown 服务器层设计",createAt:"2019-05-07T20:52:05.000Z",updateAt:"2019-05-07T20:52:05.000Z",tags:null,category:null,author:null,content:"## 简介\n\n何为网站？前端获取数据，加以恰当样式，呈现于用户，如此构成网站之雏形。\n\n然而前端渲染层获取数据，不宜直接取之于数据源。  \n数据源数据多且杂，宜增加一服务层，接管数据之增删改查，对外提供抽象一致接口。\n\n\x3c!-- more --\x3e\n\n## 相关接口\n\n服务层提供接口，分类归总如下\n\n## 首页\n\n1、网站基本信息\n\n```\n函数：siteBaseInfo\n入参：none\n出参：title,description,copyright\n(网站标题，副标题，版权拥有者)\n```\n\n2、文章列表\n\n```\n函数：homePostList\n入参：pageSize,pageNo(每页数量，当前页码)\n出参：total,pageSize,pageNo,postList{postId,title,tags,createAt,preview}\n(总数,文章列表{文章 ID，标题，标签，创建时间，预览内容})\n```\n\n3、搜索文章\n\n```\n函数：searchPostList\n入参：keyword\n出参：total,pageSize,pageNo,postList{postId,title,tags,createAt,preview,search}\n```\n\n## 文章页\n\n1、文章详情\n\n```\n函数：postDetail\n入参：postId\n出参：postId,title,tags,createAt,updateAt,preview,content\n(文章 ID，标题，标签，创建时间，修改时间，预览内容，完整内容)\n```\n\n## 归档页\n\n1、归档文章列表\n\n```\n函数：archivePostList\n入参：pageSize,pageNo,type=[year,month]\n出参：total,pageSize,pageNo,postList:[year]{postId,title,tags,createAt,preview}\n(总数，年份{创建时间，标题})\n```\n\n## 分类页| 标签页\n\n1、分类列表\n\n```\n函数：tagList\n入参：type=[tag,category]\n出参：total,type,postList{title,count}\n(总数，分类列表{题目，数量})\n```\n\n2、分类详情\n\n```\n函数：tagPostList\n入参：pageSize,pageNo,type=[tag,category],name\n出参：total,type,pageSize,pageNo,postList{postId,title,tags,createAt,preview}\n```\n\n## 关于页\n\nTodo...\n\n## 招聘页\n\nTodo...",preview:"## 简介\n\n何为网站？前端获取数据，加以恰当样式，呈现于用户，如此构成网站之雏形。\n\n然而前端渲染层获取数据，不宜直接取之于数据源。  \n数据源数据多且杂，宜增加一服务层，接管数据之增删改查，对外提供抽象一致接口。\n\n"}},"2hgb":function(n,e,t){(n.exports=t("JPst")(!1)).push([n.i,"",""])},"3EeK":function(n,e,t){var a=t("Ga1b");"string"==typeof a&&(a=[[n.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t("aET+")(a,r);a.locals&&(n.exports=a.locals)},"6AAB":function(n,e){},"8kfy":function(n){n.exports={siteTitle:"猪年奔跑的前端小伙伴",description:"A site that records our tears, laugh and grow.",copyright:"@猪年奔跑的前端小伙伴",link:"http://github.com",expire:"2019-2020",content:"",preview:""}},AOeF:function(n,e,t){"use strict";function a(n,e){return void 0===e&&(e=2),(Array(e).join("0")+n).slice(-e)}Object.defineProperty(e,"__esModule",{value:!0}),e.formatDateTime=function(n){var e=new Date(n);return e.getFullYear()+"-"+a(e.getMonth()+1)+"-"+a(e.getDate())+" "+a(e.getHours())+":"+a(e.getMinutes())+":"+a(e.getSeconds())},e.prefixNumber=a},AVg6:function(n,e,t){(e=n.exports=t("JPst")(!1)).i(t("sXYp"),""),e.push([n.i,'@font-face {\n  font-family: "iconfont";\n  /* project id 1144495 */\n  src: url("//at.alicdn.com/t/font_1144495_2y3ypdmkiwu.eot");\n  src: url("//at.alicdn.com/t/font_1144495_2y3ypdmkiwu.eot?#iefix") format("embedded-opentype"), url("//at.alicdn.com/t/font_1144495_2y3ypdmkiwu.woff2") format("woff2"), url("//at.alicdn.com/t/font_1144495_2y3ypdmkiwu.woff") format("woff"), url("//at.alicdn.com/t/font_1144495_2y3ypdmkiwu.ttf") format("truetype"), url("//at.alicdn.com/t/font_1144495_2y3ypdmkiwu.svg#iconfont") format("svg");\n}\n.iconfont {\n  font-family: "iconfont" !important;\n  font-size: 20px;\n  font-style: normal;\n  -webkit-font-smoothing: antialiased;\n  -webkit-text-stroke-width: 0.2px;\n  -moz-osx-font-smoothing: grayscale;\n}\n',""])},"B+IG":function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=t("q1tI"),r=t("55Ip");t("3EeK");var o=[{link:"/",icon:'<i class="iconfont">&#xe7d4;</i>',text:"首页"},{link:"/",icon:'<i class="iconfont">&#xe627;</i>',text:"分类"},{link:"/",icon:'<i class="iconfont">&#xe752;</i>',text:"标签"},{link:"/",icon:'<i class="iconfont">&#xe606;</i>',text:"归档"},{link:"/",icon:'<i class="iconfont">&#xe601;</i>',text:"关于"}];e.Header=function(n){return a.createElement("div",{className:"component-header"},a.createElement("div",{className:"inner"},a.createElement(r.Link,{to:"/",className:"brand"},a.createElement("h1",null," ",a.createElement("i",{className:"iconfont"},"")," ",n.title)),a.createElement("h2",null,n.description),a.createElement("div",{className:"nav"},o.map(function(n){return a.createElement(r.Link,{to:n.link,key:n.text,className:"item"},a.createElement("div",{dangerouslySetInnerHTML:{__html:n.icon}}),a.createElement("div",null,n.text))}))))},e.default=e.Header},CiZo:function(n,e,t){var a=t("0sVr");"string"==typeof a&&(a=[[n.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t("aET+")(a,r);a.locals&&(n.exports=a.locals)},DQxI:function(n){n.exports={fileMap:{"./src/public/generate/index.json":{siteTitle:"猪年奔跑的前端小伙伴",description:"A site that records our tears, laugh and grow.",copyright:"@猪年奔跑的前端小伙伴",link:"http://github.com",expire:"2019-2020",content:"",preview:""},"./src/public/generate/tech/ecmascript.json":{title:"ECMAScript 2015-2019 概览",createAt:"2019-05-07T20:55:23.000Z",updateAt:"2019-05-07T20:55:23.000Z",tags:null,category:null,author:null,content:'## ECMAScript 2015\n\n1、添加 Array.prototype.includes 函数\n功能：判断是否包含某个元素。\n\n需要注意的是，includes 函数与 indexOf()函数功能类似，其用法辨析如下：\n\n```js\n// 当元素为NaN时\n  [NaN].includes(NaN) => true\n  [NaN].indexOf(NaN) => -1\n\n// 当元素为 +0 与 -0 时\n  [+0].includes(-0) => true\n  [+0].indexOf(-0) => 0\n```\n\n\x3c!-- more --\x3e\n\n2、添加取幂运算符号 \\*\\*\n示例：\n\n```js\n2 \\*\\* 3 === Math.pow(2,3) => true, 8\n```\n\n## ECMAScript 2016\n\n1、添加 String.padStart 和 String.padEnd\n功能：填充字符串，以达到指定长度。\n\n- 当指定长度小于等于原字符串长度时，返回原字符串\n- 当指定长度大于原字符串长度时，用指定字符串填充，若是未指定字符串，则用空字符填充。\n  示例\n\n```js\n// 前置填充\n"es8".padStart(5) => "  es8"\n\n"es8".padStart(5,"lian") => "lies8"\n// 后置填充\n"es8".padEnd(5) => "es8  "\n\n"es8".padEnd(5,"lian") => "es8li"\n```\n\n2、添加 Object.values 和 Object.entries\n功能：返回指定对象的枚举属性值（属性，值）的数组\n示例：\n\n```js\nconst obj = {x:1,y:2}\nObject.values(obj) => [1,2]\n\nObject.entries(obj) => [[x,1],[y,2]]\n```\n\n3、添加 Object.getOwnPropertyDescriptors\n功能：返回指定对象的所有属性描述符\n示例：\n\n```js\nconst obj = {\n  get age(){\n    return 10;\n  }\n}\nObject.getOwnPropertyDescriptors(obj) =>\n{age:{configurable:true,enumerable:true,get:function age(){},set:undefined}}\n```\n\n4、增强字符串模版\n示例：\n\n```js\nconst version = 8;\nfunction helper(strs,...keys){\n  const addit = keys[0]===8? "better":"good";\n  return `${strs[0]} ${keys[0]} ${strs[1]} ${addit}`\n}\n\nhelper `ES ${version} is` => ES8 is better\n```',preview:"## ECMAScript 2015\n\n1、添加 Array.prototype.includes 函数\n功能：判断是否包含某个元素。\n\n需要注意的是，includes 函数与 indexOf()函数功能类似，其用法辨析如下：\n\n```js\n// 当元素为NaN时\n  [NaN].includes(NaN) => true\n  [NaN].indexOf(NaN) => -1\n\n// 当元素为 +0 与 -0 时\n  [+0].includes(-0) => true\n  [+0].indexOf(-0) => 0\n```\n\n"},"./src/public/generate/tech/haskellOverview.json":{title:"Haskell 语言总览",createAt:"2019-05-07T21:08:00.000Z",updateAt:"2019-05-07T21:08:00.000Z",tags:null,category:null,author:null,content:"## Haskell 语言总览\n\n命令式编程：a = 5 ; => a = 7;\n\n函数式编程：  \n例子: 阶乘，指从 1 到某个数的乘积。  \n一个串列中数字的和，指把第一个数字和剩余的数字的和相加。\n\n\x3c!-- more --\x3e\n\n## 语法\n\n```hs\n\x3c!-- 运算 --\x3e\n2 + 5\n49 * 100\n1892-1472\n5/2\n\n\x3c!-- 优先级 --\x3e\n(50-100)*50\n\n\x3c!-- 布尔 --\x3e\nTrue\nFalse\n&&\n||\nnot\n\n\x3c!-- 相等性 --\x3e\n5 == 5\n'hello' /= 'hi'\n\n\x3c!-- 中缀函数 --\x3e\n1 + 2\n\n\x3c!-- 前缀函数 --\x3e\nsucc 8\nmax 100 101\n\n\x3c!-- 函数调用拥有最高优先级 --\x3e\nsucc 9 + max 5 4 + 1\n\n\x3c!-- 等效于 --\x3e\n(succ 9) + (max 5 4) + 1\n\n\x3c!-- 自定义函数 --\x3e\n1、新建文件，取名为baby.ts，填写代码：\ndoubleMe x = x + x\n\n2、打开ghci，运行 :l baby.hs\n输入 doubleMe 9\n\n\x3c!-- 组合 --\x3e\ndoubleMe x = x + x\ndoubleUs x y = doubleMe x + doubleMe y\n注意，doubleUs 和 doubleMe 不分顺序\n\n\x3c!-- 基本类型 list --\x3e\nlet numbers = [4,8,15]\n合并\n[1,2] + [3,5] => [1,2,3,5]\n获取元素:!!\n[1,2,3] !! 1 => 2\n嵌套\nlet b = [[1,2],[3,5]]\n比较，从第一个元素开始，以此类推: >\n[3,2,1] > [2,2,1]\n\n获取首元素： head\nhead [1,3,5] => 1\n\n获取除头部之后的部分 : tail\ntail [5,4,3,2,1] => [4,3,2,1]\n\n获取最后一个元素 : last\nlast [1,2,3] => 3\n\n获取除最后一个元素之外的部分 : init\ninit [1,2,3] => [1,2]\n\n返回长度: length\nlength [1,2] => 2\n\n判断是否为空: null\nnull [1] => False\n\n反转: reverse\nreverse [1,2,3] => [3,2,1]\n\n获取前几个元素: take\ntake 2 [1,2,3] => [1,2]\n\n删除前几个元素: drop\ndrop 2 [1,2,3] => [3]\n\n获取最大元素: maximum\nmaximum [1,2,3] => 3\n\n获取最小元素: minimum\nminimum [1,2,3] => 1\n\n获取元素之和: sum\nsum [1,2,3] => 6\n\n获取元素之积: product\nproduct [1,2,3] => 6\n\n判断元素是否存在： elem\n1 `elem` [1,2,3] => True\n\n\x3c!-- range --\x3e\n[1..5] => [1,2,3,4,5]\n[1,3..9] => [1,3,5,7,9]\n\n重复list: cycle\ntake 3 (cycle [1,2]) => [1,2,3]\n\n重复单个元素： repeat\ntake 3 (repeat 5) => [5,5,5]\n\n指定重复次数: replicate\nreplicate 3 10 => [10,10,10]\n\n\x3c!-- comprehension --\x3e\n[ x*2 | x <- [1..3]>] => [2,4,6]\n\n条件\n[ x | x <- [50..100], x `mod` 7 == 3] => [52,59,66,73,80,87,94]\n\n\x3c!-- Tuple --\x3e\n(8,'one')\n\n返回序对的首项： fst\nfst (8,10) => 8\n\n返回序对的尾项： snd\nsnd (8,11) => 11\n\n交叉配对： zip\nzip [1,2] [3,3] => [(1,3),(2,3)]\n\n\x3c!-- 类型推导 --\x3e\n当你写下一个数字，Haskell能自己推断出它的类型\n\n检查类型： :t\n:t 'a' => Char\n\n\x3c!-- 类型声明 --\x3e\n编写函数时，给它一个明确的类型声明是个好习惯\nremoveNonUppercase :: [Char] -> [Char]\nremoveNonUppercase st = [ c | c <- st, c `elem` ['A'..'Z']]\n\n常见类型\nint 有界整数。对 32 位的机器而言，上限一般是 2147483647，下限是 -2147483648。\n\nInteger,无界整数，效率不如Int高。\nfactorial :: Integer -> Integer\nfactorial n = product [1..n]\n\nFloat 表示单精度的浮点数。\ncircumference :: Float -> Float\ncircumference r = 2 * pi * r\n\nDouble 表示双精度的浮点数。\ncircumference' :: Double -> Double\ncircumference' r = 2 * pi * r\n\nBool 表示布尔值，它只有两种值：True 和 False。\n\nChar 表示一个字符。一个字符由单引号括起，一组字符的 List 即为字符串。\n\nTuple 的类型取决于它的长度及其中项的类型。注意，空 Tuple 同样也是个类型，它只有一种值：()。\n\n\n\x3c!-- Typeclasses --\x3e\n描述类型\n\nghci> :t (==)\n(==) :: (Eq a) => a -> a -> Bool\n=> 符号。它左边的部分叫做类型约束。这段类型声明可以这样理解：\"相等函数取两个相同类型的值作为参数并回传一个布尔值，而这两个参数的类型同在 Eq 类之中(即类型约束)\"\n\n常见 Typeclass\n\n判断相等的类型： Eq\n\n比较大小的类型： Ord\n\n可用字符串的类型： show\nshow 3.1 => '3.1'\n\n将字符串转为Read的某成员类型： read\nread \"5\" - 2   => 3\n\n一个表达式后跟:: 的类型注释，以明确其类型\nread \"5\" :: Int  => 5\n\n连续类型： enum\n每个值都有后继子 (successer) 和前置子 (predecesor)，分别可以通过 succ 函数和 pred 函数得到\n[LT .. GT]  => [LT,EQ,GT]\n\n获取边界： maxBound 与 minBound\nminBound :: Int  => -2147483648\nmaxBound :: Char  => '\\1114111'\n\n数字类型： Num\n:t 20  => 20 :: (Num t) => t\n\n表示整数： Intergral\n\n表示浮点类型： Floating\n\n\x3c!-- 模式匹配 --\x3e\n判断一个数字是否是7\nlucky :: (Integral a) => a -> String\nlucky 7 = \"LUCKY NUMBER SEVEN!\"\nlucky x = \"Sorry, you're out of luck, pal!\"\n\n实现阶乘\nfactorial :: (Integral a) => a -> a\nfactorial 0 = 1\nfactorial n = n * factorial (n - 1)\n\n二位矢量相加\naddVectors :: (Num a) => (a, a) -> (a, a) -> (a, a)\naddVectors (x1, y1) (x2, y2) = (x1 + x2, y1 + y2)\n\n实现  head 函数\nhead' :: [a] -> a\nhead' [] = error \"Can't call head on an empty list, dummy!\"\nhead' (x:_) = x\n\n实现 length 函数\nlength' :: (Num b) => [a] -> b\nlength' [] = 0\nlength' (_:xs) = 1 + length' xs\n\n@模式,在按模式分割时，保留对其整体的引用\ncapital :: String -> String\ncapital \"\" = \"Empty string, whoops!\"\ncapital all@(x:xs) = \"The first letter of \" ++ all ++ \" is \" ++ [x]\n\ncapital \"Dracula\"  => \"The first letter of Dracula is D\"\n\nguard 跟在函数名及参数、竖线标志之后，通常他们都是靠右一个缩进排成一列。一个 guard 就是一个布尔表达式，如果为真，就使用其对应的函数体。如果为假，就送去见下一个 guard\n检查体重\nbmiTell :: (RealFloat a) => a -> String\nbmiTell bmi\n    | bmi <= 18.5 = \"You're underweight, you emo, you!\"\n    | bmi <= 25.0 = \"You're supposedly normal. Pffft, I bet you're ugly!\"\n    | bmi <= 30.0 = \"You're fat! Lose some weight, fatty!\"\n    | otherwise   = \"You're a whale, congratulations!\"\n\n实现 max 函数\nmax' :: (Ord a) => a -> a -> a\nmax' a b\n    | a > b     = a\n    | otherwise = b\n\nwhere 关键字，定义名字\nbmiTell :: (RealFloat a) => a -> a -> String\nbmiTell weight height\n    | weight / height ^ 2 <= 18.5 = \"You're underweight, you emo, you!\"\n    | weight / height ^ 2 <= 25.0 = \"You're supposedly normal. Pffft, I bet you're ugly!\"\n    | weight / height ^ 2 <= 30.0 = \"You're fat! Lose some weight, fatty!\"\n    | otherwise                   = \"You're a whale, congratulations!\"\n\n    =>\nbmiTell :: (RealFloat a) => a -> a -> String\nbmiTell weight height\n    | bmi <= 18.5 = \"You're underweight, you emo, you!\"\n    | bmi <= 25.0 = \"You're supposedly normal. Pffft, I bet you're ugly!\"\n    | bmi <= 30.0 = \"You're fat! Lose some weight, fatty!\"\n    | otherwise   = \"You're a whale, congratulations!\"\n    where bmi = weight / height ^ 2\n\n=>\n\nbmiTell :: (RealFloat a) => a -> a -> String\nbmiTell weight height\n    | bmi <= skinny = \"You're underweight, you emo, you!\"\n    | bmi <= normal = \"You're supposedly normal. Pffft, I bet you're ugly!\"\n    | bmi <= fat    = \"You're fat! Lose some weight, fatty!\"\n    | otherwise     = \"You're a whale, congratulations!\"\n    where bmi = weight / height ^ 2\n          skinny = 18.5\n          normal = 25.0\n          fat = 30.0\n\nlet 关键字，定义局部名字\n求圆柱体表面积\ncylinder :: (RealFloat a) => a -> a -> a\ncylinder r h =\n    let sideArea = 2 * pi * r * h\n        topArea = pi * r ^2\n    in  sideArea + 2 * topArea\n\ncase，前面提到的匹配模式其实是case的语法糖\n\nhead' :: [a] -> a\nhead' [] = error \"No head for empty lists!\"\nhead' (x:_) = x\n=>\nhead' :: [a] -> a\nhead' xs = case xs of [] -> error \"No head for empty lists!\"\n                      (x:_) -> x\n\n\x3c!-- 递归 --\x3e\n斐波那契数列\n\n实现 取列表的最大元素\nmaximum' :: (Ord a) => [a] -> a\nmaximum' [] = error \"maximum of empty list\"\nmaximum' [x] = x\nmaximum' (x:xs)\n    | x > maxTail = x\n    | otherwise = maxTail\n    where maxTail = maximum' xs\n\n实现反转\nreverse' :: [a] -> [a]\nreverse' [] = []\nreverse' (x:xs) = reverse' xs ++ [x]\n\n实现 zip\nzip' :: [a] -> [b] -> [(a,b)]\nzip' _ [] = []\nzip' [] _ = []\nzip' (x:xs) (y:ys) = (x,y):zip' xs ys\n\n实现 elem\nelem' :: (Eq a) => a -> [a] -> Bool\nelem' a [] = False\nelem' a (x:xs)\n    | a == x    = True\n    | otherwise = a `elem'` xs\n\n快速排序\nquicksort :: (Ord a) => [a] -> [a]\nquicksort [] = []\nquicksort (x:xs) =\n  let smallerSorted = quicksort [a | a <- xs, a <= x]\n      biggerSorted = quicksort [a | a <- xs, a > x]\n  in smallerSorted ++ [x] ++ biggerSorted\n\n\x3c!-- 高端函数 --\x3e\n本质上，Haskell所有函数只有一个参数\nghci> max 4 5\n5\nghci> (max 4) 5\n5\n\n实现 zipWith。 它取一个函数和两个 List 做参数，并把两个 List 交到一起(使相应的元素去调用该函数)。\n\nzipWith' :: (a -> b -> c) -> [a] -> [b] -> [c]\nzipWith' _ [] _ = []\nzipWith' _ _ [] = []\nzipWith' f (x:xs) (y:ys) = f x y : zipWith' f xs ys\n\nzipWith' max [6,3,2,1] [7,3,1,5]  => [7,3,2,5]\n\n实现 flip，取一个函数作参数并回传一个相似的函数，其中它们的参数颠倒了。\nflip' :: (a -> b -> c) -> b -> a -> c\nflip' f y x = f x y\n\nghci> flip' zip [1,2,3,4,5] \"hello\"\n[('h',1),('e',2),('l',3),('l',4),('o',5)]\n\n实现 map，取一个函数和 List 做参数，遍历该 List 的每个元素来调用该函数产生一个新的 List。\n\nmap :: (a -> b) -> [a] -> [b]\nmap _ [] = []\nmap f (x:xs) = f x : map f xs\n\n实现filter，取一个限制条件和一个 List，回传该 List 中所有符合该条件的元素\nfilter :: (a -> Bool) -> [a] -> [a]\nfilter _ [] = []\nfilter p (x:xs)\n    | p x       = x : filter p xs\n    | otherwise = filter p xs\n\n\x3c!-- lambda --\x3e\n匿名函数， \\ (因为它看起来像是希腊字母的 lambda)，后面是用空格分隔的参数，-> 后面就是函数体。\n\n实现 flip\nflip' :: (a -> b -> c) -> b -> a -> c\nflip' f = \\x y -> f y x\n\n\x3c!-- fold --\x3e\n实现 sum\nsum' :: (Num a) => [a] -> a\nsum' xs = foldl (\\acc x -> acc + x) 0 xs\n\n=>\n\nsum' :: (Num a) => [a] -> a\nsum' = foldl (+) 0\n\n常用库函数\nelem' :: (Eq a) => a -> [a] -> Bool\nelem' y ys = foldl (\\acc x -> if x == y then True else acc) False ys\n\nmap' :: (a -> b) -> [a] -> [b]\nmap' f xs = foldr (\\x acc -> f x : acc) [] xs\n\nmaximum' :: (Ord a) => [a] -> a\nmaximum' = foldr1 (\\x acc -> if x > acc then x else acc)\n\nreverse' :: [a] -> [a]\nreverse' = foldl (\\acc x -> x : acc) []\n\nproduct' :: (Num a) => [a] -> a\nproduct' = foldr1 (*)\n\nfilter' :: (a -> Bool) -> [a] -> [a]\nfilter' p = foldr (\\x acc -> if p x then x : acc else acc) []\n\nhead' :: [a] -> a\nhead' = foldr1 (\\x _ -> x)\n\nlast' :: [a] -> a\nlast' = foldl1 (\\_ x -> x)\n\n\x3c!-- $ 函数 --\x3e\n函数调用符，优先级最低\n\nsum (map sqrt [1..130])。由于低优先级的 $，我们可以将其改为 sum $ map sqrt [1..130]，可以省敲不少键！\n\n\x3c!-- 函数组合 --\x3e\n将多个函数组合，即 . 函数\n定义：\n(.) :: (b -> c) -> (a -> b) -> a -> c\nf . g = \\x -> f (g x)\n\n示例\nghci> map (\\x -> negate (abs x)) [5,-3,-6,7,-3,2,-19,24]\n[-5,-3,-6,-7,-3,-2,-19,-24]\n\n=>\nghci> map (negate . abs) [5,-3,-6,7,-3,2,-19,24]\n[-5,-3,-6,-7,-3,-2,-19,-24]\n\n\x3c!-- 模块 --\x3e\nHaskell 中的模块是含有一组相关的函数，类型和类型类的组合。而 Haskell 进程的本质便是从主模块中引用其它模块并调用其中的函数来运行操作。\n\n加载所有函数\nimport Data.List\n\nnumUniques :: (Eq a) => [a] -> Int\nnumUniques = length . nub\n\n仅加载所需函数\nimport Data.List (nub，sort)\n\n明确不需加载函数\nimport Data.List hiding (nub)\n\n起别名\nimport qualified Data.Map as M\n\n自定义模块\nmodule Geometry\n( sphereVolume\n，sphereArea\n，cubeVolume\n，cubeArea\n，cuboidArea\n，cuboidVolume\n) where\n\nsphereVolume :: Float -> Float\nsphereVolume radius = (4.0 / 3.0) * pi * (radius ^ 3)\n\nsphereArea :: Float -> Float\nsphereArea radius = 4 * pi * (radius ^ 2)\n\ncubeVolume :: Float -> Float\ncubeVolume side = cuboidVolume side side side\n\ncubeArea :: Float -> Float\ncubeArea side = cuboidArea side side side\n\ncuboidVolume :: Float -> Float -> Float -> Float\ncuboidVolume a b c = rectangleArea a b * c\n\ncuboidArea :: Float -> Float -> Float -> Float\ncuboidArea a b c = rectangleArea a b * 2 + rectangleArea a c * 2 + rectangleArea c b * 2\n\nrectangleArea :: Float -> Float -> Float\nrectangleArea a b = a * b\n\n\x3c!-- 定义类型 --\x3e\ndata Shape = Circle Float Float Float | Rectangle Float Float Float Float\n\nghci> :t Circle\nCircle :: Float -> Float -> Float -> Shape\nghci> :t Rectangle\nRectangle :: Float -> Float -> Float -> Float -> Shape\n\nsurface :: Shape -> Float\nsurface (Circle _ _ r) = pi * r ^ 2\nsurface (Rectangle x1 y1 x2 y2) = (abs $ x2 - x1) * (abs $ y2 - y1)\n\n\x3c!-- Record Syntax --\x3e\n 一个数据类型来描述一个人，得包含他的姓、名、年龄、身高、电话号码以及最爱的冰淇淋\n\ndata Person = Person String String Int Float String String deriving (Show)\ndata Person = Person { firstName :: String\n                     , lastName :: String\n                     , age :: Int\n                     , height :: Float\n                     , phoneNumber :: String\n                     , flavor :: String\n                     } deriving (Show)\n\n在 data 声明的后面加上 deriving (Show)，那 Haskell 就会自动将该类型至于 Show 类型类之中。\n\n\n\x3c!-- IO --\x3e\n<- 是用来运算 I/O actions 并将他的结果绑定到名称。\nmain = putStrLn \"hello,world\"\n\nmain = do\n    foo <- putStrLn \"Hello, what's your name?\"\n    name <- getLine\n    putStrLn (\"Hey \" ++ name ++ \", you rock!\")\n\n\n\n```\n\n## 典型例子\n\n函数式编程的一般思路：先取一个初始集合，添加过滤条件，最终取得正确结果。\n\n如何取得三边长度皆为整数且小于等于 10，周长为 24 的直角三角形？\n\n1、列出三边小于等于 10 的三角形\n\n```\nlet triangles = [(a,b,c) | c <- [1..10],b <- [1..10], a<-[1..10] ]\n```\n\n2、加入直角三角形的限制条件，同时满足 b 小于斜边，a 小于 b\n\n```\nghci> let rightTriangles = [ (a,b,c) | c <- [1..10], b <- [1..c], a <- [1..b], a^2 + b^2 == c^2]\n```\n\n2、加入周长为 24\n\n```\nghci> let rightTriangles' = [ (a,b,c) | c <- [1..10], b <- [1..c], a <- [1..b], a^2 + b^2 == c^2, a+b+c == 24]\n```",preview:"## Haskell 语言总览\n\n命令式编程：a = 5 ; => a = 7;\n\n函数式编程：  \n例子: 阶乘，指从 1 到某个数的乘积。  \n一个串列中数字的和，指把第一个数字和剩余的数字的和相加。\n\n"},"./src/public/generate/tech/macTool.json":{title:"Mac 小工具",createAt:"2019-05-07T20:59:58.000Z",updateAt:"2019-05-07T20:59:58.000Z",tags:null,category:null,author:null,content:"## 简介\n\n> 论语有云：工欲善其事，必先利其器。\n\n我有一台 Mac 电脑，平日编程、写作、整理材料均在其上完成。时间久了，自然积累了一些提高效率与体验的工具。现特地整理记录如下，以供参考。\n\n## 小工具\n\n1、Bandwidth+\n\n> 简介\n\n监控电脑上传与下载速度\n\n> 效果\n\n![效果](public/images/bandwidth.png)\n\n\x3c!-- more --\x3e\n\n> 链接\n\nhttps://itunes.apple.com/us/app/bandwidth/id490461369?mt=12\n\n(待续)",preview:"## 简介\n\n> 论语有云：工欲善其事，必先利其器。\n\n我有一台 Mac 电脑，平日编程、写作、整理材料均在其上完成。时间久了，自然积累了一些提高效率与体验的工具。现特地整理记录如下，以供参考。\n\n## 小工具\n\n1、Bandwidth+\n\n> 简介\n\n监控电脑上传与下载速度\n\n> 效果\n\n![效果](public/images/bandwidth.png)\n\n"},"./src/public/generate/tech/markdownService.json":{title:"Markdown 服务器层设计",createAt:"2019-05-07T20:52:05.000Z",updateAt:"2019-05-07T20:52:05.000Z",tags:null,category:null,author:null,content:"## 简介\n\n何为网站？前端获取数据，加以恰当样式，呈现于用户，如此构成网站之雏形。\n\n然而前端渲染层获取数据，不宜直接取之于数据源。  \n数据源数据多且杂，宜增加一服务层，接管数据之增删改查，对外提供抽象一致接口。\n\n\x3c!-- more --\x3e\n\n## 相关接口\n\n服务层提供接口，分类归总如下\n\n## 首页\n\n1、网站基本信息\n\n```\n函数：siteBaseInfo\n入参：none\n出参：title,description,copyright\n(网站标题，副标题，版权拥有者)\n```\n\n2、文章列表\n\n```\n函数：homePostList\n入参：pageSize,pageNo(每页数量，当前页码)\n出参：total,pageSize,pageNo,postList{postId,title,tags,createAt,preview}\n(总数,文章列表{文章 ID，标题，标签，创建时间，预览内容})\n```\n\n3、搜索文章\n\n```\n函数：searchPostList\n入参：keyword\n出参：total,pageSize,pageNo,postList{postId,title,tags,createAt,preview,search}\n```\n\n## 文章页\n\n1、文章详情\n\n```\n函数：postDetail\n入参：postId\n出参：postId,title,tags,createAt,updateAt,preview,content\n(文章 ID，标题，标签，创建时间，修改时间，预览内容，完整内容)\n```\n\n## 归档页\n\n1、归档文章列表\n\n```\n函数：archivePostList\n入参：pageSize,pageNo,type=[year,month]\n出参：total,pageSize,pageNo,postList:[year]{postId,title,tags,createAt,preview}\n(总数，年份{创建时间，标题})\n```\n\n## 分类页| 标签页\n\n1、分类列表\n\n```\n函数：tagList\n入参：type=[tag,category]\n出参：total,type,postList{title,count}\n(总数，分类列表{题目，数量})\n```\n\n2、分类详情\n\n```\n函数：tagPostList\n入参：pageSize,pageNo,type=[tag,category],name\n出参：total,type,pageSize,pageNo,postList{postId,title,tags,createAt,preview}\n```\n\n## 关于页\n\nTodo...\n\n## 招聘页\n\nTodo...",preview:"## 简介\n\n何为网站？前端获取数据，加以恰当样式，呈现于用户，如此构成网站之雏形。\n\n然而前端渲染层获取数据，不宜直接取之于数据源。  \n数据源数据多且杂，宜增加一服务层，接管数据之增删改查，对外提供抽象一致接口。\n\n"},"./src/public/generate/tech/webpack.json":{title:"构建利器 Webpack",createAt:"2019-05-07T21:13:48.000Z",updateAt:"2019-05-07T21:13:48.000Z",tags:null,category:null,author:null,content:'## 简介\n\nwebpack 是一个 JavaScript 程序的静态模块打包器。\n\n其工作原理是：webpack 以递归方式构建一个关系依赖图，囊括 JavaScript 程序需要的各个模块，然后将这些模块打包成一个或多个依赖包(bundle)。\n\n\x3c!-- more --\x3e\n\n## 配置矩阵\n\nwebpack 配置的组成矩阵：入口 entry，输出 output，加载器 loader，插件 plugin。\n\n## 入口\n\n用法:\n\n```js\n// 简写语法\nentry: string | string[]\n// 对象语法\nentry: {\n  [entryChunkName: string]: string | string[]\n}\n```\n\n## 输出\n\n用法：\n\n```js\n// 简写语法\noutput: {\n  filename:  string,\n  path: string,\n  publicPath: string\n}\n\n// 示例\n{\n  entry: {\n    app: \'./src/app.js\',\n    search: \'./src/search.js\'\n  },\n  output: {\n    filename: \'[name].js\',\n    path: __dirname + \'/dist\'\n  }\n}\n\n// 写入到硬盘：./dist/app.js, ./dist/search.js\n```\n\n## 模式(补充)\n\n配置模式 mode，告知 webpack 使用相应模式的内置优化。\n\n```js\n// 用法\n{\n  mode: "development" | "production";\n}\n\n// 示例\nmodule.exports = {\n  mode: "development"\n};\n// development 等效于\nmodule.exports = {\n  plugins: [\n    new webpack.NamedModulesPlugin(),\n    new webpack.DefinePlugin({\n      "process.env.NODE_ENV": JSON.stringify("development")\n    })\n  ]\n};\nmodule.exports = {\n  mode: "production"\n};\n// production 等效于\nmodule.exports = {\n  plugins: [\n    new UglifyJsPlugin(/* ... */),\n    new webpack.DefinePlugin({\n      "process.env.NODE_ENV": JSON.stringify("production")\n    }),\n    new webpack.optimize.ModuleConcatenationPlugin(),\n    new webpack.NoEmitOnErrorsPlugin()\n  ]\n};\n```\n\n## 加载器\n\n加载器，允许你在加载文件时对文件进行预处理。\n整体配置如下：\n1、安装依赖包，如 ts-loader\n\n```bash\nnpm install --save-dev ts-loader\n```\n\n2、在配置文件 webpack.config.js 上，添加内容\n\n```js\n{\n  module: {\n    rules: [{ test: /\\.ts$/, use: "ts-loader" }];\n  }\n}\n```\n\n## 插件\n\n插件是 webpack 的核心功能。其本质是一个 JavaScript 对象，内置一个 apply 方法，通过此方法可访问 webpack 的 compiler 对象。\n\n示例：\n\n```js\nconst pluginName = "ConsoleLogOnBuildWebpackPlugin";\n\nclass ConsoleLogOnBuildWebpackPlugin {\n  apply(compiler) {\n    compiler.hooks.run.tap(pluginName, compilation => {\n      console.log("webpack 构建过程开始！");\n    });\n  }\n}\n```\n\n整体配置如下：\n1、安装依赖包\n\n```bash\nnpm install --save-dev html-webpack-plugin\n```\n\n2、在配置文件 babel.config.js 上，添加内容\n\n```js\nconst HtmlWebpackPlugin = require("html-webpack-plugin");\n\nconst config = {\n  plugins: [new HtmlWebpackPlugin({ template: "./src/index.html" })]\n};\n\nmodule.exports = config;\n```\n\n## web 服务器\n\nwebpack 提供一个简单的 web 服务器 webpack-dev-server，让我们在开发时启动 web 服务。\n\n整体配置如下：\n\n1、安装依赖包\n\n```bash\nnpm i --save-dev webpack-dev-server webpack-merge\n```\n\n2、在配置文件 package.json 上，添加内容\n\n```json\n{\n  "scripts": {\n    "dev": "webpack-dev-server --open --config webpack.config.js"\n  }\n}\n```\n\n3、在配置文件 webpack.config.js 上，添加内容\n\n```js\n{\n  // 使用 source map\n  devtool:\'inline-source-map\',\n  // 服务器参数\n  devServer:{\n    contentBase:"./dist"\n  }\n}\n```\n\n## 实践\n\n1、安装依赖包\n\n```bash\nnpm install --save-dev webpack webpack-cli webpack-merge\n```\n\n2、配置启动命令\n在配置文件 package.json 上，添加内容\n\n```js\n{\n  "scripts":{\n    "start":"webpack --config webpack.config.js"\n  }\n}\n```\n\n3、添加解析规则\n在配置文件 webpack.config.js 上，添加内容\n\n```js\n{\n  "resolve": {\n    extensions:[\'.js\',\'.ts\',\'.tsx\'],\n    alias:{\n      "@": path.resolve(__dirname, \'src/\'),\n      utils: path.resolve(__dirname,\'src/utils/\')\n    }\n  }\n}\n```\n\n## 常用加载器(附录)\n\n1、加载 css\n\n```js\n// 安装依赖包\nnpm install --save-dev style-loader css-loader\n\n// 在配置文件 webpack.config.js 上，添加内容\n{\n  test:/\\.css$/,\n  use:[\n    \'style-loader\',\n    \'css-loader\'\n  ]\n}\n```\n\n2、加载 less\n\n```js\n// 安装依赖包\nnpm install --save-dev less-loader less\n\n// 在配置文件 webpack.config.js 上，添加内容\n{\n  test:/\\.less$/,\n  use: [\n    {\n      loader: "style-loader"\n    },\n    {\n      loader: "css-loader"\n    },\n    {\n      loader: "less-loader"\n    }\n  ]\n}\n```\n\n3、加载图片\n\n```js\n// 安装依赖包\nnpm install --save-dev file-loader\n\n// 在配置文件 webpack.config.js 上，添加内容\n{\n  test: /\\.(png|svg|jpg|gif)$/,\n  use:\'file-loader\'\n}\n\n```\n\n4、加载 ts\n\n```js\n// 安装依赖包\nnpm install --save-dev ts-loader\n\n// 在配置文件 webpack.config.js 上，添加内容\n{\n  test: /\\.tsx?$/,\n  use:\'ts-loader\'\n}\n```\n\n5、加载 ts\n\n```js\n// 安装依赖包\nnpm install --save-dev awesome-typescript-loader\n\n\n// 在配置文件 webpack.config.js 上，添加内容\n{\n  test: /\\.tsx?$/,\n  use:\'awesome-typescript-loader\'\n},\n{\n  enforce:"pre",\n  test:/\\.js$/,\n  loader:"source-map-loader"\n}\n```\n\n6、加载 json\n\n```js\n// 安装依赖包\nnpm install --save-dev json-loader\n\n\n// 在配置文件 webpack.config.js 上，添加内容\n{\n  test: /\\.json$/,\n  use:\'json-loader\'\n}\n```\n\n7、加载 html\n\n```js\n// 安装依赖包\nnpm install --save-dev html-loader\n\n// 在配置文件 webpack.config.js 上，添加内容\n\n{\n  test: /\\.html$/,\n  use: [\n    {\n      loader: "html-loader",\n      options: {\n        minimize: true\n      }\n    }\n  ]\n}\n```\n\n## 常见插件(附录)\n\n1、html-webpack-plugin\n\n```js\n// 安装依赖包\nnpm install --save-dev html-webpack-plugin\n\n// 在配置文件 webpack.config.js 上，添加内容\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\n\nconst config = {\n  plugins:[\n    new HtmlWebpackPlugin({\n      filename: "index.html",\n      template: "./src/index.html",\n      inject: true\n      })\n  ]\n}\n```\n\n2、clean-webpack-plugin\n\n```js\n// 安装依赖包\nnpm install --save-dev clean-webpack-plugin\n\n// 在配置文件 webpack.config.js 上，添加内容\nconst CleanWebpackPlugin = require(\'clean-webpack-plugin\');\n\nconst config = {\n  plugins:[\n    new CleanWebpackPlugin([\'dist\'])\n  ]\n}\n\n```\n\n3、uglifyjs-webpack-plugin\n\n```js\n// 安装依赖包\nnpm install --save-dev uglifyjs-webpack-plugin\n\n// 在配置文件 webpack.config.js 上，添加内容\nconst UglifyJSPlugin = require("uglifyjs-webpack-plugin");\n\nconst config = {\n  plugins:[\n        new UglifyJSPlugin({\n      uglifyOptions: {\n        compress: {\n          drop_console: true\n        }\n      },\n      sourceMap: true\n    }),\n  ]\n}\n```\n\n4、copy-webpack-plugin\n\n```js\n// 安装依赖包\nnpm install --save-dev copy-webpack-plugin\n\n// 在配置文件 webpack.config.js 上，添加内容\nconst CopyWebpackPlugin = require("copy-webpack-plugin");\n\nconst config = {\n    plugins: [\n    new CopyWebpackPlugin([{ from: "src/images", to: "images" }])\n  ]\n}\n```\n\n5、webpack-bundle-analyzer\n\n```js\n// 安装依赖包\nnpm install --save-dev webpack-bundle-analyzer\n\n// 在配置文件 webpack.config.js 上，添加内容\nconst BundleAnalyzerPlugin = require(\'webpack-bundle-analyzer\').BundleAnalyzerPlugin;\n\n\nconst config = {\n    plugins: [\n    new BundleAnalyzerPlugin()\n  ]\n}\n```\n\n(完)',preview:"## 简介\n\nwebpack 是一个 JavaScript 程序的静态模块打包器。\n\n其工作原理是：webpack 以递归方式构建一个关系依赖图，囊括 JavaScript 程序需要的各个模块，然后将这些模块打包成一个或多个依赖包(bundle)。\n\n"}}}},DwpH:function(n,e,t){var a=t("WAxg");"string"==typeof a&&(a=[[n.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t("aET+")(a,r);a.locals&&(n.exports=a.locals)},EYJa:function(n){n.exports={title:"Haskell 语言总览",createAt:"2019-05-07T21:08:00.000Z",updateAt:"2019-05-07T21:08:00.000Z",tags:null,category:null,author:null,content:"## Haskell 语言总览\n\n命令式编程：a = 5 ; => a = 7;\n\n函数式编程：  \n例子: 阶乘，指从 1 到某个数的乘积。  \n一个串列中数字的和，指把第一个数字和剩余的数字的和相加。\n\n\x3c!-- more --\x3e\n\n## 语法\n\n```hs\n\x3c!-- 运算 --\x3e\n2 + 5\n49 * 100\n1892-1472\n5/2\n\n\x3c!-- 优先级 --\x3e\n(50-100)*50\n\n\x3c!-- 布尔 --\x3e\nTrue\nFalse\n&&\n||\nnot\n\n\x3c!-- 相等性 --\x3e\n5 == 5\n'hello' /= 'hi'\n\n\x3c!-- 中缀函数 --\x3e\n1 + 2\n\n\x3c!-- 前缀函数 --\x3e\nsucc 8\nmax 100 101\n\n\x3c!-- 函数调用拥有最高优先级 --\x3e\nsucc 9 + max 5 4 + 1\n\n\x3c!-- 等效于 --\x3e\n(succ 9) + (max 5 4) + 1\n\n\x3c!-- 自定义函数 --\x3e\n1、新建文件，取名为baby.ts，填写代码：\ndoubleMe x = x + x\n\n2、打开ghci，运行 :l baby.hs\n输入 doubleMe 9\n\n\x3c!-- 组合 --\x3e\ndoubleMe x = x + x\ndoubleUs x y = doubleMe x + doubleMe y\n注意，doubleUs 和 doubleMe 不分顺序\n\n\x3c!-- 基本类型 list --\x3e\nlet numbers = [4,8,15]\n合并\n[1,2] + [3,5] => [1,2,3,5]\n获取元素:!!\n[1,2,3] !! 1 => 2\n嵌套\nlet b = [[1,2],[3,5]]\n比较，从第一个元素开始，以此类推: >\n[3,2,1] > [2,2,1]\n\n获取首元素： head\nhead [1,3,5] => 1\n\n获取除头部之后的部分 : tail\ntail [5,4,3,2,1] => [4,3,2,1]\n\n获取最后一个元素 : last\nlast [1,2,3] => 3\n\n获取除最后一个元素之外的部分 : init\ninit [1,2,3] => [1,2]\n\n返回长度: length\nlength [1,2] => 2\n\n判断是否为空: null\nnull [1] => False\n\n反转: reverse\nreverse [1,2,3] => [3,2,1]\n\n获取前几个元素: take\ntake 2 [1,2,3] => [1,2]\n\n删除前几个元素: drop\ndrop 2 [1,2,3] => [3]\n\n获取最大元素: maximum\nmaximum [1,2,3] => 3\n\n获取最小元素: minimum\nminimum [1,2,3] => 1\n\n获取元素之和: sum\nsum [1,2,3] => 6\n\n获取元素之积: product\nproduct [1,2,3] => 6\n\n判断元素是否存在： elem\n1 `elem` [1,2,3] => True\n\n\x3c!-- range --\x3e\n[1..5] => [1,2,3,4,5]\n[1,3..9] => [1,3,5,7,9]\n\n重复list: cycle\ntake 3 (cycle [1,2]) => [1,2,3]\n\n重复单个元素： repeat\ntake 3 (repeat 5) => [5,5,5]\n\n指定重复次数: replicate\nreplicate 3 10 => [10,10,10]\n\n\x3c!-- comprehension --\x3e\n[ x*2 | x <- [1..3]>] => [2,4,6]\n\n条件\n[ x | x <- [50..100], x `mod` 7 == 3] => [52,59,66,73,80,87,94]\n\n\x3c!-- Tuple --\x3e\n(8,'one')\n\n返回序对的首项： fst\nfst (8,10) => 8\n\n返回序对的尾项： snd\nsnd (8,11) => 11\n\n交叉配对： zip\nzip [1,2] [3,3] => [(1,3),(2,3)]\n\n\x3c!-- 类型推导 --\x3e\n当你写下一个数字，Haskell能自己推断出它的类型\n\n检查类型： :t\n:t 'a' => Char\n\n\x3c!-- 类型声明 --\x3e\n编写函数时，给它一个明确的类型声明是个好习惯\nremoveNonUppercase :: [Char] -> [Char]\nremoveNonUppercase st = [ c | c <- st, c `elem` ['A'..'Z']]\n\n常见类型\nint 有界整数。对 32 位的机器而言，上限一般是 2147483647，下限是 -2147483648。\n\nInteger,无界整数，效率不如Int高。\nfactorial :: Integer -> Integer\nfactorial n = product [1..n]\n\nFloat 表示单精度的浮点数。\ncircumference :: Float -> Float\ncircumference r = 2 * pi * r\n\nDouble 表示双精度的浮点数。\ncircumference' :: Double -> Double\ncircumference' r = 2 * pi * r\n\nBool 表示布尔值，它只有两种值：True 和 False。\n\nChar 表示一个字符。一个字符由单引号括起，一组字符的 List 即为字符串。\n\nTuple 的类型取决于它的长度及其中项的类型。注意，空 Tuple 同样也是个类型，它只有一种值：()。\n\n\n\x3c!-- Typeclasses --\x3e\n描述类型\n\nghci> :t (==)\n(==) :: (Eq a) => a -> a -> Bool\n=> 符号。它左边的部分叫做类型约束。这段类型声明可以这样理解：\"相等函数取两个相同类型的值作为参数并回传一个布尔值，而这两个参数的类型同在 Eq 类之中(即类型约束)\"\n\n常见 Typeclass\n\n判断相等的类型： Eq\n\n比较大小的类型： Ord\n\n可用字符串的类型： show\nshow 3.1 => '3.1'\n\n将字符串转为Read的某成员类型： read\nread \"5\" - 2   => 3\n\n一个表达式后跟:: 的类型注释，以明确其类型\nread \"5\" :: Int  => 5\n\n连续类型： enum\n每个值都有后继子 (successer) 和前置子 (predecesor)，分别可以通过 succ 函数和 pred 函数得到\n[LT .. GT]  => [LT,EQ,GT]\n\n获取边界： maxBound 与 minBound\nminBound :: Int  => -2147483648\nmaxBound :: Char  => '\\1114111'\n\n数字类型： Num\n:t 20  => 20 :: (Num t) => t\n\n表示整数： Intergral\n\n表示浮点类型： Floating\n\n\x3c!-- 模式匹配 --\x3e\n判断一个数字是否是7\nlucky :: (Integral a) => a -> String\nlucky 7 = \"LUCKY NUMBER SEVEN!\"\nlucky x = \"Sorry, you're out of luck, pal!\"\n\n实现阶乘\nfactorial :: (Integral a) => a -> a\nfactorial 0 = 1\nfactorial n = n * factorial (n - 1)\n\n二位矢量相加\naddVectors :: (Num a) => (a, a) -> (a, a) -> (a, a)\naddVectors (x1, y1) (x2, y2) = (x1 + x2, y1 + y2)\n\n实现  head 函数\nhead' :: [a] -> a\nhead' [] = error \"Can't call head on an empty list, dummy!\"\nhead' (x:_) = x\n\n实现 length 函数\nlength' :: (Num b) => [a] -> b\nlength' [] = 0\nlength' (_:xs) = 1 + length' xs\n\n@模式,在按模式分割时，保留对其整体的引用\ncapital :: String -> String\ncapital \"\" = \"Empty string, whoops!\"\ncapital all@(x:xs) = \"The first letter of \" ++ all ++ \" is \" ++ [x]\n\ncapital \"Dracula\"  => \"The first letter of Dracula is D\"\n\nguard 跟在函数名及参数、竖线标志之后，通常他们都是靠右一个缩进排成一列。一个 guard 就是一个布尔表达式，如果为真，就使用其对应的函数体。如果为假，就送去见下一个 guard\n检查体重\nbmiTell :: (RealFloat a) => a -> String\nbmiTell bmi\n    | bmi <= 18.5 = \"You're underweight, you emo, you!\"\n    | bmi <= 25.0 = \"You're supposedly normal. Pffft, I bet you're ugly!\"\n    | bmi <= 30.0 = \"You're fat! Lose some weight, fatty!\"\n    | otherwise   = \"You're a whale, congratulations!\"\n\n实现 max 函数\nmax' :: (Ord a) => a -> a -> a\nmax' a b\n    | a > b     = a\n    | otherwise = b\n\nwhere 关键字，定义名字\nbmiTell :: (RealFloat a) => a -> a -> String\nbmiTell weight height\n    | weight / height ^ 2 <= 18.5 = \"You're underweight, you emo, you!\"\n    | weight / height ^ 2 <= 25.0 = \"You're supposedly normal. Pffft, I bet you're ugly!\"\n    | weight / height ^ 2 <= 30.0 = \"You're fat! Lose some weight, fatty!\"\n    | otherwise                   = \"You're a whale, congratulations!\"\n\n    =>\nbmiTell :: (RealFloat a) => a -> a -> String\nbmiTell weight height\n    | bmi <= 18.5 = \"You're underweight, you emo, you!\"\n    | bmi <= 25.0 = \"You're supposedly normal. Pffft, I bet you're ugly!\"\n    | bmi <= 30.0 = \"You're fat! Lose some weight, fatty!\"\n    | otherwise   = \"You're a whale, congratulations!\"\n    where bmi = weight / height ^ 2\n\n=>\n\nbmiTell :: (RealFloat a) => a -> a -> String\nbmiTell weight height\n    | bmi <= skinny = \"You're underweight, you emo, you!\"\n    | bmi <= normal = \"You're supposedly normal. Pffft, I bet you're ugly!\"\n    | bmi <= fat    = \"You're fat! Lose some weight, fatty!\"\n    | otherwise     = \"You're a whale, congratulations!\"\n    where bmi = weight / height ^ 2\n          skinny = 18.5\n          normal = 25.0\n          fat = 30.0\n\nlet 关键字，定义局部名字\n求圆柱体表面积\ncylinder :: (RealFloat a) => a -> a -> a\ncylinder r h =\n    let sideArea = 2 * pi * r * h\n        topArea = pi * r ^2\n    in  sideArea + 2 * topArea\n\ncase，前面提到的匹配模式其实是case的语法糖\n\nhead' :: [a] -> a\nhead' [] = error \"No head for empty lists!\"\nhead' (x:_) = x\n=>\nhead' :: [a] -> a\nhead' xs = case xs of [] -> error \"No head for empty lists!\"\n                      (x:_) -> x\n\n\x3c!-- 递归 --\x3e\n斐波那契数列\n\n实现 取列表的最大元素\nmaximum' :: (Ord a) => [a] -> a\nmaximum' [] = error \"maximum of empty list\"\nmaximum' [x] = x\nmaximum' (x:xs)\n    | x > maxTail = x\n    | otherwise = maxTail\n    where maxTail = maximum' xs\n\n实现反转\nreverse' :: [a] -> [a]\nreverse' [] = []\nreverse' (x:xs) = reverse' xs ++ [x]\n\n实现 zip\nzip' :: [a] -> [b] -> [(a,b)]\nzip' _ [] = []\nzip' [] _ = []\nzip' (x:xs) (y:ys) = (x,y):zip' xs ys\n\n实现 elem\nelem' :: (Eq a) => a -> [a] -> Bool\nelem' a [] = False\nelem' a (x:xs)\n    | a == x    = True\n    | otherwise = a `elem'` xs\n\n快速排序\nquicksort :: (Ord a) => [a] -> [a]\nquicksort [] = []\nquicksort (x:xs) =\n  let smallerSorted = quicksort [a | a <- xs, a <= x]\n      biggerSorted = quicksort [a | a <- xs, a > x]\n  in smallerSorted ++ [x] ++ biggerSorted\n\n\x3c!-- 高端函数 --\x3e\n本质上，Haskell所有函数只有一个参数\nghci> max 4 5\n5\nghci> (max 4) 5\n5\n\n实现 zipWith。 它取一个函数和两个 List 做参数，并把两个 List 交到一起(使相应的元素去调用该函数)。\n\nzipWith' :: (a -> b -> c) -> [a] -> [b] -> [c]\nzipWith' _ [] _ = []\nzipWith' _ _ [] = []\nzipWith' f (x:xs) (y:ys) = f x y : zipWith' f xs ys\n\nzipWith' max [6,3,2,1] [7,3,1,5]  => [7,3,2,5]\n\n实现 flip，取一个函数作参数并回传一个相似的函数，其中它们的参数颠倒了。\nflip' :: (a -> b -> c) -> b -> a -> c\nflip' f y x = f x y\n\nghci> flip' zip [1,2,3,4,5] \"hello\"\n[('h',1),('e',2),('l',3),('l',4),('o',5)]\n\n实现 map，取一个函数和 List 做参数，遍历该 List 的每个元素来调用该函数产生一个新的 List。\n\nmap :: (a -> b) -> [a] -> [b]\nmap _ [] = []\nmap f (x:xs) = f x : map f xs\n\n实现filter，取一个限制条件和一个 List，回传该 List 中所有符合该条件的元素\nfilter :: (a -> Bool) -> [a] -> [a]\nfilter _ [] = []\nfilter p (x:xs)\n    | p x       = x : filter p xs\n    | otherwise = filter p xs\n\n\x3c!-- lambda --\x3e\n匿名函数， \\ (因为它看起来像是希腊字母的 lambda)，后面是用空格分隔的参数，-> 后面就是函数体。\n\n实现 flip\nflip' :: (a -> b -> c) -> b -> a -> c\nflip' f = \\x y -> f y x\n\n\x3c!-- fold --\x3e\n实现 sum\nsum' :: (Num a) => [a] -> a\nsum' xs = foldl (\\acc x -> acc + x) 0 xs\n\n=>\n\nsum' :: (Num a) => [a] -> a\nsum' = foldl (+) 0\n\n常用库函数\nelem' :: (Eq a) => a -> [a] -> Bool\nelem' y ys = foldl (\\acc x -> if x == y then True else acc) False ys\n\nmap' :: (a -> b) -> [a] -> [b]\nmap' f xs = foldr (\\x acc -> f x : acc) [] xs\n\nmaximum' :: (Ord a) => [a] -> a\nmaximum' = foldr1 (\\x acc -> if x > acc then x else acc)\n\nreverse' :: [a] -> [a]\nreverse' = foldl (\\acc x -> x : acc) []\n\nproduct' :: (Num a) => [a] -> a\nproduct' = foldr1 (*)\n\nfilter' :: (a -> Bool) -> [a] -> [a]\nfilter' p = foldr (\\x acc -> if p x then x : acc else acc) []\n\nhead' :: [a] -> a\nhead' = foldr1 (\\x _ -> x)\n\nlast' :: [a] -> a\nlast' = foldl1 (\\_ x -> x)\n\n\x3c!-- $ 函数 --\x3e\n函数调用符，优先级最低\n\nsum (map sqrt [1..130])。由于低优先级的 $，我们可以将其改为 sum $ map sqrt [1..130]，可以省敲不少键！\n\n\x3c!-- 函数组合 --\x3e\n将多个函数组合，即 . 函数\n定义：\n(.) :: (b -> c) -> (a -> b) -> a -> c\nf . g = \\x -> f (g x)\n\n示例\nghci> map (\\x -> negate (abs x)) [5,-3,-6,7,-3,2,-19,24]\n[-5,-3,-6,-7,-3,-2,-19,-24]\n\n=>\nghci> map (negate . abs) [5,-3,-6,7,-3,2,-19,24]\n[-5,-3,-6,-7,-3,-2,-19,-24]\n\n\x3c!-- 模块 --\x3e\nHaskell 中的模块是含有一组相关的函数，类型和类型类的组合。而 Haskell 进程的本质便是从主模块中引用其它模块并调用其中的函数来运行操作。\n\n加载所有函数\nimport Data.List\n\nnumUniques :: (Eq a) => [a] -> Int\nnumUniques = length . nub\n\n仅加载所需函数\nimport Data.List (nub，sort)\n\n明确不需加载函数\nimport Data.List hiding (nub)\n\n起别名\nimport qualified Data.Map as M\n\n自定义模块\nmodule Geometry\n( sphereVolume\n，sphereArea\n，cubeVolume\n，cubeArea\n，cuboidArea\n，cuboidVolume\n) where\n\nsphereVolume :: Float -> Float\nsphereVolume radius = (4.0 / 3.0) * pi * (radius ^ 3)\n\nsphereArea :: Float -> Float\nsphereArea radius = 4 * pi * (radius ^ 2)\n\ncubeVolume :: Float -> Float\ncubeVolume side = cuboidVolume side side side\n\ncubeArea :: Float -> Float\ncubeArea side = cuboidArea side side side\n\ncuboidVolume :: Float -> Float -> Float -> Float\ncuboidVolume a b c = rectangleArea a b * c\n\ncuboidArea :: Float -> Float -> Float -> Float\ncuboidArea a b c = rectangleArea a b * 2 + rectangleArea a c * 2 + rectangleArea c b * 2\n\nrectangleArea :: Float -> Float -> Float\nrectangleArea a b = a * b\n\n\x3c!-- 定义类型 --\x3e\ndata Shape = Circle Float Float Float | Rectangle Float Float Float Float\n\nghci> :t Circle\nCircle :: Float -> Float -> Float -> Shape\nghci> :t Rectangle\nRectangle :: Float -> Float -> Float -> Float -> Shape\n\nsurface :: Shape -> Float\nsurface (Circle _ _ r) = pi * r ^ 2\nsurface (Rectangle x1 y1 x2 y2) = (abs $ x2 - x1) * (abs $ y2 - y1)\n\n\x3c!-- Record Syntax --\x3e\n 一个数据类型来描述一个人，得包含他的姓、名、年龄、身高、电话号码以及最爱的冰淇淋\n\ndata Person = Person String String Int Float String String deriving (Show)\ndata Person = Person { firstName :: String\n                     , lastName :: String\n                     , age :: Int\n                     , height :: Float\n                     , phoneNumber :: String\n                     , flavor :: String\n                     } deriving (Show)\n\n在 data 声明的后面加上 deriving (Show)，那 Haskell 就会自动将该类型至于 Show 类型类之中。\n\n\n\x3c!-- IO --\x3e\n<- 是用来运算 I/O actions 并将他的结果绑定到名称。\nmain = putStrLn \"hello,world\"\n\nmain = do\n    foo <- putStrLn \"Hello, what's your name?\"\n    name <- getLine\n    putStrLn (\"Hey \" ++ name ++ \", you rock!\")\n\n\n\n```\n\n## 典型例子\n\n函数式编程的一般思路：先取一个初始集合，添加过滤条件，最终取得正确结果。\n\n如何取得三边长度皆为整数且小于等于 10，周长为 24 的直角三角形？\n\n1、列出三边小于等于 10 的三角形\n\n```\nlet triangles = [(a,b,c) | c <- [1..10],b <- [1..10], a<-[1..10] ]\n```\n\n2、加入直角三角形的限制条件，同时满足 b 小于斜边，a 小于 b\n\n```\nghci> let rightTriangles = [ (a,b,c) | c <- [1..10], b <- [1..c], a <- [1..b], a^2 + b^2 == c^2]\n```\n\n2、加入周长为 24\n\n```\nghci> let rightTriangles' = [ (a,b,c) | c <- [1..10], b <- [1..c], a <- [1..b], a^2 + b^2 == c^2, a+b+c == 24]\n```",preview:"## Haskell 语言总览\n\n命令式编程：a = 5 ; => a = 7;\n\n函数式编程：  \n例子: 阶乘，指从 1 到某个数的乘积。  \n一个串列中数字的和，指把第一个数字和剩余的数字的和相加。\n\n"}},EsqA:function(n,e,t){n.exports=t.p+"8a39a3b12d19de2c7bc947b1374ee41b.png"},GNV3:function(n,e,t){"use strict";var a,r=this&&this.__extends||(a=function(n,e){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}a(n,e),n.prototype=null===e?Object.create(e):(t.prototype=e.prototype,new t)});Object.defineProperty(e,"__esModule",{value:!0});var o=t("q1tI"),s=t("gdfu"),i=t("xXJP");t("13KQ");var c=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e.state={timeGua:{}},e.timeGua=function(){var n=i.currentTime(),t=n.year,a=n.month,r=n.day,o=n.hour,s=i.time2gua(t,a,r,o);e.setState({timeGua:s})},e}return r(e,n),e.prototype.render=function(){var n=this;return o.createElement("div",{className:"mei"},o.createElement("div",null,o.createElement(s.Button,{onClick:function(){return n.timeGua()}},"时间占"),o.createElement("div",null,"本卦：",JSON.stringify(this.state.timeGua.ben)),o.createElement("div",null,"互卦：",JSON.stringify(this.state.timeGua.hu)),o.createElement("div",null,"变卦：",JSON.stringify(this.state.timeGua.bian)),o.createElement("div",null,"变爻：",JSON.stringify(this.state.timeGua.change))),o.createElement("div",null,o.createElement(s.Button,{onClick:function(){return n.timeGua()}},"数字占"),o.createElement("div",null,"本卦：",JSON.stringify(this.state.timeGua.ben)),o.createElement("div",null,"互卦：",JSON.stringify(this.state.timeGua.hu)),o.createElement("div",null,"变卦：",JSON.stringify(this.state.timeGua.bian))))},e}(o.Component);e.default=c},Ga1b:function(n,e,t){(n.exports=t("JPst")(!1)).push([n.i,".component-header .inner {\n  width: 700px;\n  margin: 0 auto;\n  padding: 100px 0 70px;\n  text-align: center;\n}\n.component-header .inner .brand {\n  border-radius: 4px 15px 4px 15px;\n  background: #222;\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  padding: 0 25px;\n}\n.component-header .inner .brand h1 {\n  color: inherit;\n  line-height: 40px;\n  margin: 0;\n  font-size: 18px;\n}\n.component-header .inner h2 {\n  font-size: 18px;\n  color: #999;\n  line-height: 40px;\n  margin: 0;\n}\n.component-header .inner .nav {\n  display: flex;\n  justify-content: center;\n}\n.component-header .inner .nav .item {\n  color: #222;\n  padding: 0 15px;\n}\n.component-header .inner .nav .item .iconfont {\n  font-size: 26px;\n}\n",""])},Gf5M:function(n,e){},HG3P:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=t("q1tI"),r=t("55Ip");t("zSLb");var o=t("+LKy"),s=t("QtWG"),i=t("GNV3");e.default=function(){return a.createElement(r.HashRouter,null,a.createElement(r.Switch,null,a.createElement(r.Route,{path:"/",exact:!0,component:o.default}),a.createElement(r.Route,{path:"/post",component:s.default}),a.createElement(r.Route,{path:"/mei",component:i.default})))}},"Iw/T":function(n,e,t){var a=t("MZc9");"string"==typeof a&&(a=[[n.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t("aET+")(a,r);a.locals&&(n.exports=a.locals)},MLMA:function(n,e,t){"use strict";function a(n){for(var t in n)e.hasOwnProperty(t)||(e[t]=n[t])}Object.defineProperty(e,"__esModule",{value:!0}),a(t("AOeF")),a(t("hIh8"));var r=t("cW3K");e.constants=r},MZc9:function(n,e,t){(n.exports=t("JPst")(!1)).push([n.i,"",""])},N8tG:function(n){n.exports={title:"Mac 小工具",createAt:"2019-05-07T20:59:58.000Z",updateAt:"2019-05-07T20:59:58.000Z",tags:null,category:null,author:null,content:"## 简介\n\n> 论语有云：工欲善其事，必先利其器。\n\n我有一台 Mac 电脑，平日编程、写作、整理材料均在其上完成。时间久了，自然积累了一些提高效率与体验的工具。现特地整理记录如下，以供参考。\n\n## 小工具\n\n1、Bandwidth+\n\n> 简介\n\n监控电脑上传与下载速度\n\n> 效果\n\n![效果](public/images/bandwidth.png)\n\n\x3c!-- more --\x3e\n\n> 链接\n\nhttps://itunes.apple.com/us/app/bandwidth/id490461369?mt=12\n\n(待续)",preview:"## 简介\n\n> 论语有云：工欲善其事，必先利其器。\n\n我有一台 Mac 电脑，平日编程、写作、整理材料均在其上完成。时间久了，自然积累了一些提高效率与体验的工具。现特地整理记录如下，以供参考。\n\n## 小工具\n\n1、Bandwidth+\n\n> 简介\n\n监控电脑上传与下载速度\n\n> 效果\n\n![效果](public/images/bandwidth.png)\n\n"}},OCm5:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=t("q1tI"),r=t("55Ip");t("DwpH"),e.Footer=function(n){return a.createElement("div",{className:"component-footer"},a.createElement("span",null,a.createElement("i",{className:"iconfont"},""),n.expire),a.createElement("span",null,a.createElement("i",{className:"iconfont"},""),a.createElement(r.Link,{to:"/"},n.copyright)))},e.default=e.Footer},PLjV:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=t("q1tI");e.Hello=function(n){return a.createElement("h1",null,"Hello from ",n.compiler," and ",n.framework,"!")}},QhgS:function(n,e,t){(n.exports=t("JPst")(!1)).push([n.i,"",""])},QiMX:function(n){n.exports={title:"图片",createAt:"2019-04-17T10:07:10.000Z",updateAt:"2019-04-17T10:07:11.000Z",tags:["前端","技术"],author:"lian",content:"# 简介\n\n何为网站？前端获取数据，加以恰当样式，呈现于用户，如此构成网站之雏形。\n\n然而前端渲染层获取数据，不宜直接取之于数据源。  \n数据源数据多且杂，宜增加一服务层，接管数据之增删改查，对外提供抽象一致接口。\n\n\x3c!-- more --\x3e\n\n![image](public/images/bandwidth.png)\n\n(待续)",preview:"# 简介\n\n何为网站？前端获取数据，加以恰当样式，呈现于用户，如此构成网站之雏形。\n\n然而前端渲染层获取数据，不宜直接取之于数据源。  \n数据源数据多且杂，宜增加一服务层，接管数据之增删改查，对外提供抽象一致接口。\n\n"}},QqCh:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=t("q1tI"),r=t("i8i4"),o=t("/MKj"),s=t("+tof"),i=t("HG3P"),c=t("z0N/"),l=s.configureStore({reducer:c.default});r.render(a.createElement(o.Provider,{store:l},a.createElement(i.default,null)),document.getElementById("root"))},QtWG:function(n,e,t){"use strict";var a,r=this&&this.__extends||(a=function(n,e){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}a(n,e),n.prototype=null===e?Object.create(e):(t.prototype=e.prototype,new t)});Object.defineProperty(e,"__esModule",{value:!0});var o=t("q1tI"),s=t("0Xwh"),i=t("B+IG"),c=t("OCm5"),l=t("s8j5"),p=t("xXJP");t("WqLS");var u=function(n){function e(){return null!==n&&n.apply(this,arguments)||this}return r(e,n),e.prototype.render=function(){var n=new URLSearchParams(this.props.location.search).get("postId"),e=p.siteBaseInfo(),t=p.postDetail(n);return o.createElement("div",null,o.createElement(s.default,{type:["top","bottom"],ease:["easeOutQuart","easeInOutQuart"]},o.createElement(i.default,{key:"header",title:e.title,description:e.description}),o.createElement(l.default,{key:"body",postDetail:t}),o.createElement(c.default,{key:"footer",copyright:e.copyright,expire:e.expire})))},e}(o.Component);e.default=u},RnhZ:function(n,e,t){var a={"./af":"K/tc","./af.js":"K/tc","./ar":"jnO4","./ar-dz":"o1bE","./ar-dz.js":"o1bE","./ar-kw":"Qj4J","./ar-kw.js":"Qj4J","./ar-ly":"HP3h","./ar-ly.js":"HP3h","./ar-ma":"CoRJ","./ar-ma.js":"CoRJ","./ar-sa":"gjCT","./ar-sa.js":"gjCT","./ar-tn":"bYM6","./ar-tn.js":"bYM6","./ar.js":"jnO4","./az":"SFxW","./az.js":"SFxW","./be":"H8ED","./be.js":"H8ED","./bg":"hKrs","./bg.js":"hKrs","./bm":"p/rL","./bm.js":"p/rL","./bn":"kEOa","./bn.js":"kEOa","./bo":"0mo+","./bo.js":"0mo+","./br":"aIdf","./br.js":"aIdf","./bs":"JVSJ","./bs.js":"JVSJ","./ca":"1xZ4","./ca.js":"1xZ4","./cs":"PA2r","./cs.js":"PA2r","./cv":"A+xa","./cv.js":"A+xa","./cy":"l5ep","./cy.js":"l5ep","./da":"DxQv","./da.js":"DxQv","./de":"tGlX","./de-at":"s+uk","./de-at.js":"s+uk","./de-ch":"u3GI","./de-ch.js":"u3GI","./de.js":"tGlX","./dv":"WYrj","./dv.js":"WYrj","./el":"jUeY","./el.js":"jUeY","./en-SG":"zavE","./en-SG.js":"zavE","./en-au":"Dmvi","./en-au.js":"Dmvi","./en-ca":"OIYi","./en-ca.js":"OIYi","./en-gb":"Oaa7","./en-gb.js":"Oaa7","./en-ie":"4dOw","./en-ie.js":"4dOw","./en-il":"czMo","./en-il.js":"czMo","./en-nz":"b1Dy","./en-nz.js":"b1Dy","./eo":"Zduo","./eo.js":"Zduo","./es":"iYuL","./es-do":"CjzT","./es-do.js":"CjzT","./es-us":"Vclq","./es-us.js":"Vclq","./es.js":"iYuL","./et":"7BjC","./et.js":"7BjC","./eu":"D/JM","./eu.js":"D/JM","./fa":"jfSC","./fa.js":"jfSC","./fi":"gekB","./fi.js":"gekB","./fo":"ByF4","./fo.js":"ByF4","./fr":"nyYc","./fr-ca":"2fjn","./fr-ca.js":"2fjn","./fr-ch":"Dkky","./fr-ch.js":"Dkky","./fr.js":"nyYc","./fy":"cRix","./fy.js":"cRix","./ga":"USCx","./ga.js":"USCx","./gd":"9rRi","./gd.js":"9rRi","./gl":"iEDd","./gl.js":"iEDd","./gom-latn":"DKr+","./gom-latn.js":"DKr+","./gu":"4MV3","./gu.js":"4MV3","./he":"x6pH","./he.js":"x6pH","./hi":"3E1r","./hi.js":"3E1r","./hr":"S6ln","./hr.js":"S6ln","./hu":"WxRl","./hu.js":"WxRl","./hy-am":"1rYy","./hy-am.js":"1rYy","./id":"UDhR","./id.js":"UDhR","./is":"BVg3","./is.js":"BVg3","./it":"bpih","./it-ch":"bxKX","./it-ch.js":"bxKX","./it.js":"bpih","./ja":"B55N","./ja.js":"B55N","./jv":"tUCv","./jv.js":"tUCv","./ka":"IBtZ","./ka.js":"IBtZ","./kk":"bXm7","./kk.js":"bXm7","./km":"6B0Y","./km.js":"6B0Y","./kn":"PpIw","./kn.js":"PpIw","./ko":"Ivi+","./ko.js":"Ivi+","./ku":"JCF/","./ku.js":"JCF/","./ky":"lgnt","./ky.js":"lgnt","./lb":"RAwQ","./lb.js":"RAwQ","./lo":"sp3z","./lo.js":"sp3z","./lt":"JvlW","./lt.js":"JvlW","./lv":"uXwI","./lv.js":"uXwI","./me":"KTz0","./me.js":"KTz0","./mi":"aIsn","./mi.js":"aIsn","./mk":"aQkU","./mk.js":"aQkU","./ml":"AvvY","./ml.js":"AvvY","./mn":"lYtQ","./mn.js":"lYtQ","./mr":"Ob0Z","./mr.js":"Ob0Z","./ms":"6+QB","./ms-my":"ZAMP","./ms-my.js":"ZAMP","./ms.js":"6+QB","./mt":"G0Uy","./mt.js":"G0Uy","./my":"honF","./my.js":"honF","./nb":"bOMt","./nb.js":"bOMt","./ne":"OjkT","./ne.js":"OjkT","./nl":"+s0g","./nl-be":"2ykv","./nl-be.js":"2ykv","./nl.js":"+s0g","./nn":"uEye","./nn.js":"uEye","./pa-in":"8/+R","./pa-in.js":"8/+R","./pl":"jVdC","./pl.js":"jVdC","./pt":"8mBD","./pt-br":"0tRk","./pt-br.js":"0tRk","./pt.js":"8mBD","./ro":"lyxo","./ro.js":"lyxo","./ru":"lXzo","./ru.js":"lXzo","./sd":"Z4QM","./sd.js":"Z4QM","./se":"//9w","./se.js":"//9w","./si":"7aV9","./si.js":"7aV9","./sk":"e+ae","./sk.js":"e+ae","./sl":"gVVK","./sl.js":"gVVK","./sq":"yPMs","./sq.js":"yPMs","./sr":"zx6S","./sr-cyrl":"E+lV","./sr-cyrl.js":"E+lV","./sr.js":"zx6S","./ss":"Ur1D","./ss.js":"Ur1D","./sv":"X709","./sv.js":"X709","./sw":"dNwA","./sw.js":"dNwA","./ta":"PeUW","./ta.js":"PeUW","./te":"XLvN","./te.js":"XLvN","./tet":"V2x9","./tet.js":"V2x9","./tg":"Oxv6","./tg.js":"Oxv6","./th":"EOgW","./th.js":"EOgW","./tl-ph":"Dzi0","./tl-ph.js":"Dzi0","./tlh":"z3Vd","./tlh.js":"z3Vd","./tr":"DoHr","./tr.js":"DoHr","./tzl":"z1FC","./tzl.js":"z1FC","./tzm":"wQk9","./tzm-latn":"tT3J","./tzm-latn.js":"tT3J","./tzm.js":"wQk9","./ug-cn":"YRex","./ug-cn.js":"YRex","./uk":"raLr","./uk.js":"raLr","./ur":"UpQW","./ur.js":"UpQW","./uz":"Loxo","./uz-latn":"AQ68","./uz-latn.js":"AQ68","./uz.js":"Loxo","./vi":"KSF8","./vi.js":"KSF8","./x-pseudo":"/X5v","./x-pseudo.js":"/X5v","./yo":"fzPg","./yo.js":"fzPg","./zh-cn":"XDpg","./zh-cn.js":"XDpg","./zh-hk":"SatO","./zh-hk.js":"SatO","./zh-tw":"kOpN","./zh-tw.js":"kOpN"};function r(n){var e=o(n);return t(e)}function o(n){if(!t.o(a,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return a[n]}r.keys=function(){return Object.keys(a)},r.resolve=o,n.exports=r,r.id="RnhZ"},TW1i:function(n){n.exports={title:"五森",createAt:"2019-05-07T19:14:46.000Z",updateAt:"2019-05-07T19:14:46.000Z",tags:null,category:null,author:null,content:"# wusen\n\n\x3c!-- more --\x3e\n\nHello wusen",preview:"# wusen\n\n"}},U4t2:function(n){n.exports={title:"数据服务层(实验性)",createAt:"2019-05-16T10:07:10.000Z",updateAt:"2019-05-17T10:07:11.000Z",tags:"前端",author:"lian",content:"# 简介\n\n何为网站？前端获取数据，加以恰当样式，呈现于用户，如此构成网站之雏形。\n\n然而前端渲染层获取数据，不宜直接取之于数据源。  \n数据源数据多且杂，宜增加一服务层，接管数据之增删改查，对外提供抽象一致接口。\n\n\x3c!-- more --\x3e\n\n# 相关接口\n\n服务层提供接口，分类归总如下\n\n## 首页\n\n1、网站基本信息  \n函数：siteBaseInfo  \n入参：none  \n出参：title,description,copyright(网站标题，副标题，版权拥有者)\n\n2、文章列表  \n函数：postList  \n入参：pageSize,pageNo(每页数量，当前页码)  \n出参：total,pageSize,pageNo,postList{postId,title,tags,createAt,preview}  \n(总数,文章列表{文章 ID，标题，标签，创建时间，预览内容})\n\n3、搜索文章  \n函数：postSearch  \n入参：keyword  \n出参：total,postList{title,content,postId}\n\n## 文章页\n\n1、文章详情  \n函数：postDetail  \n入参：postId  \n出参：postId,title,tags,createAt,updateAt,preview,content  \n(文章 ID，标题，标签，创建时间，修改时间，预览内容，完整内容)\n\n## 归档页\n\n1、归档文章列表  \n函数：postArchive  \n入参：pageSize,pageNo,type=year  \n出参：total,pageSize,pageNo,[year]:{createAt,title}  \n(总数，年份{创建时间，标题})\n\n## 分类页\n\n1、分类列表  \n函数：postCategory  \n入参：none  \n出参：total,categoryList{title,count}  \n(总数，分类列表{题目，数量})\n\n2、分类详情  \n函数：postDetailCategory  \n入参：pageSize,pageNo,category  \n出参：total,title,postList{createAt,title}\n\n## 关于页\n\n## 招聘页\n\n(待续)",preview:"# 简介\n\n何为网站？前端获取数据，加以恰当样式，呈现于用户，如此构成网站之雏形。\n\n然而前端渲染层获取数据，不宜直接取之于数据源。  \n数据源数据多且杂，宜增加一服务层，接管数据之增删改查，对外提供抽象一致接口。\n\n"}},V3o4:function(n){n.exports={title:"图片",createAt:"2019-05-17T10:07:10.000Z",updateAt:"2019-05-17T10:07:11.000Z",tags:["前端","技术"],author:"lian",content:"# 简介\n\n何为网站？前端获取数据，加以恰当样式，呈现于用户，如此构成网站之雏形。\n\n然而前端渲染层获取数据，不宜直接取之于数据源。  \n数据源数据多且杂，宜增加一服务层，接管数据之增删改查，对外提供抽象一致接口。\n\n\x3c!-- more --\x3e\n\n![image](public/images/bandwidth.png)\n\n(待续)",preview:"# 简介\n\n何为网站？前端获取数据，加以恰当样式，呈现于用户，如此构成网站之雏形。\n\n然而前端渲染层获取数据，不宜直接取之于数据源。  \n数据源数据多且杂，宜增加一服务层，接管数据之增删改查，对外提供抽象一致接口。\n\n"}},WAxg:function(n,e,t){(n.exports=t("JPst")(!1)).push([n.i,".component-footer {\n  margin: 50px 0;\n  text-align: center;\n  color: #222;\n}\n.component-footer .iconfont {\n  font-size: 16px;\n}\n.component-footer span {\n  margin: 0 5px;\n}\n.component-footer span a {\n  color: inherit;\n}\n",""])},WqLS:function(n,e,t){var a=t("2hgb");"string"==typeof a&&(a=[[n.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t("aET+")(a,r);a.locals&&(n.exports=a.locals)},Yiz8:function(n){n.exports={title:"ECMAScript 8 新特性",createAt:"2019-04-15T10:07:10.000Z",updateAt:"2019-04-17T10:07:11.000Z",tags:"前端",author:"lian",content:'# \bECMAScript 8\n\n1、添加 String.padStart 和 String.padEnd\n功能：填充字符串，以达到指定长度。\n\n- 当指定长度小于等于原字符串长度时，返回原字符串\n- 当指定长度大于原字符串长度时，用指定字符串填充，若是未指定字符串，则用空字符填充。\n  示例\n\n```js\n// 前置填充\n"es8".padStart(5) => "  es8"\n\n"es8".padStart(5,"lian") => "lies8"\n// 后置填充\n"es8".padEnd(5) => "es8  "\n\n"es8".padEnd(5,"lian") => "es8li"\n```\n\n\x3c!-- more --\x3e\n\n2、添加 Object.values 和 Object.entries\n功能：返回指定对象的枚举属性值（属性，值）的数组\n示例：\n\n```js\nconst obj = {x:1,y:2}\nObject.values(obj) => [1,2]\n\nObject.entries(obj) => [[x,1],[y,2]]\n```\n\n3、添加 Object.getOwnPropertyDescriptors\n功能：返回指定对象的所有属性描述符\n示例：\n\n```js\nconst obj = {\n  get age(){\n    return 10;\n  }\n}\nObject.getOwnPropertyDescriptors(obj) =>\n{age:{configurable:true,enumerable:true,get:function age(){},set:undefined}}\n```\n\n4、增强字符串模版\n示例：\n\n```js\nconst version = 8;\nfunction helper(strs,...keys){\n  const addit = keys[0]===8? "better":"good";\n  return `${strs[0]} ${keys[0]} ${strs[1]} ${addit}`\n}\n\nhelper `ES ${version} is` => ES8 is better\n```\n\n(待续)',preview:'# \bECMAScript 8\n\n1、添加 String.padStart 和 String.padEnd\n功能：填充字符串，以达到指定长度。\n\n- 当指定长度小于等于原字符串长度时，返回原字符串\n- 当指定长度大于原字符串长度时，用指定字符串填充，若是未指定字符串，则用空字符填充。\n  示例\n\n```js\n// 前置填充\n"es8".padStart(5) => "  es8"\n\n"es8".padStart(5,"lian") => "lies8"\n// 后置填充\n"es8".padEnd(5) => "es8  "\n\n"es8".padEnd(5,"lian") => "es8li"\n```\n\n'}},bC3G:function(n){n.exports={title:"ECMAScript 7 品鲜",createAt:"2018-04-08T10:07:10.000Z",updateAt:"2018-04-08T10:07:11.000Z",tags:"前端",author:"lian",content:"# \bECMAScript 7 品鲜\n\n1、添加 Array.prototype.includes 函数\n功能：判断是否包含某个元素。\n\n需要注意的是，includes 函数与 indexOf()函数功能类似，其用法辨析如下：\n\n```js\n// 当元素为NaN时\n  [NaN].includes(NaN) => true\n  [NaN].indexOf(NaN) => -1\n\n// 当元素为 +0 与 -0 时\n  [+0].includes(-0) => true\n  [+0].indexOf(-0) => 0\n```\n\n\x3c!-- more --\x3e\n\n2、添加取幂运算符号 \\*\\*\n示例：\n\n```js\n2 \\*\\* 3 === Math.pow(2,3) => true, 8\n```\n\n(待续)",preview:"# \bECMAScript 7 品鲜\n\n1、添加 Array.prototype.includes 函数\n功能：判断是否包含某个元素。\n\n需要注意的是，includes 函数与 indexOf()函数功能类似，其用法辨析如下：\n\n```js\n// 当元素为NaN时\n  [NaN].includes(NaN) => true\n  [NaN].indexOf(NaN) => -1\n\n// 当元素为 +0 与 -0 时\n  [+0].includes(-0) => true\n  [+0].indexOf(-0) => 0\n```\n\n"}},bQRy:function(n,e){n.exports='<!doctype html> <html lang=en> <head> <title>猪年奔跑的前端小伙伴</title> <meta charset=utf-8 /> <link rel=icon href=https://logos-download.com/wp-content/uploads/2017/05/cropped-favicon-512-01-32x32.png sizes=32x32 /> <meta name=viewport content="width=device-width,initial-scale=1,maximum-scale=1,minimum-scale=1,user-scalable=no"/> </head> <body> <div id=root style=height:100%></div> </body> </html> '},cW3K:function(n,e,t){"use strict";var a,r;Object.defineProperty(e,"__esModule",{value:!0}),e.TAG=(a=["tag","category"])[0],e.CATEGORY=a[1],e.YEAR=(r=["year","month"])[0],e.MONTH=r[1]},d4DY:function(n,e,t){"use strict";var a=this&&this.__assign||function(){return(a=Object.assign||function(n){for(var e,t=1,a=arguments.length;t<a;t++)for(var r in e=arguments[t])Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}).apply(this,arguments)};Object.defineProperty(e,"__esModule",{value:!0});var r=t("8kfy"),o=t("DQxI"),s=t("MLMA");function i(n,e){void 0===e&&(e="tech");var t=[];return Object.keys(n).map(function(a){if(a.indexOf(e)>-1){var r=n[a];r.postId=a,t.push(r)}}),t}e.siteBaseInfo=function(){return{title:r.siteTitle,description:r.description,copyright:r.copyright,expire:r.expire}},e.homePostList=function(n,e){var t=i(o.fileMap),a=t.length,r=t.map(function(n){return{postId:n.postId,title:n.title,tags:n.tags,createAt:n.createAt,preview:n.preview}});return{postList:r=(r=r.sort(function(n,e){return new Date(e.createAt)-new Date(n.createAt)})).filter(function(t,a){return a+1>e*n-n&&a+1<=e*n}),total:a,pageNo:e,pageSize:n}},e.postDetail=function(n){var e=t("qOw0")("./"+n.slice(6));return{postId:n,title:e.title,tags:e.tags,createAt:e.createAt,updateAt:e.updateAt,preview:e.preview,content:e.content}},e.searchPostList=function(n,e,t,r){void 0===e&&(e=10),void 0===t&&(t=1),void 0===r&&(r=20);var s=i(o.fileMap).map(function(n){return{postId:n.postId,title:n.title,tags:n.tags,createAt:n.createAt,preview:n.preview}}),c=(s=(s=s.sort(function(n,e){return new Date(e.createAt)-new Date(n.createAt)})).filter(function(e){var t=!1;return e.title.includes(n)?t=!0:e.preview.includes(n)&&(t=!0),t})).length;return s=(s=s.filter(function(n,a){return a+1>t*e-e&&a+1<=t*e})).map(function(e){var t="";if(e.title.includes(n))t=e.title;else if(e.preview.includes(n)){var o=e.preview.indexOf(n)-(r-n.length)/2,s=o+r;o=o>0?o:0,s=s<e.preview.length?s:e.preview.length,t=e.preview.slice(o,s)}return a({},e,{searchFragment:t})}),{total:c,pageSize:e,pageNo:t,keyword:n,postList:s}},e.archivePostList=function(n,e,t){void 0===t&&(t=s.constants.YEAR);var a=i(o.fileMap),r=a.length,c=a.map(function(n){return{postId:n.postId,title:n.title,tags:n.tags,createAt:n.createAt,preview:n.preview}});c=(c=c.sort(function(n,e){return new Date(e.createAt)-new Date(n.createAt)})).filter(function(t,a){return a+1>e*n-n&&a+1<=e*n});var l={};return c.map(function(n){var e=new Date(n.createAt),a=e.getFullYear(),r=a+s.prefixNumber(e.getMonth());t===s.constants.MONTH?(l[r]=l[r]?l[r]:[],l[r].push(n)):(l[a]=l[a]?l[a]:[],l[a].push(n))}),{data:l,total:r,pageNo:e,pageSize:n}},e.tagList=function(n){void 0===n&&(n=s.constants.TAG);var e=i(o.fileMap).map(function(n){return{postId:n.postId,title:n.title,tags:n.tags,createAt:n.createAt,preview:n.preview}}),t={};return n===s.constants.TAG&&e.map(function(n){"string"==typeof n.tags?(t[n.tags]=t[n.tags]?t[n.tags]:[],t[n.tags].push(n)):n.tags.map(function(e){t[e]=t[e]?t[e]:[],t[e].push(n)})}),{total:Object.keys(t).length,type:n,tagList:Object.keys(t).map(function(n){return{title:n,count:t[n].length}})}},e.tagPostList=function(n,e,t,a){void 0===a&&(a=s.constants.TAG);var r=i(o.fileMap).map(function(n){return{postId:n.postId,title:n.title,tags:n.tags,createAt:n.createAt,preview:n.preview}}),c={};a===s.constants.TAG&&r.map(function(n){"string"==typeof n.tags?(c[n.tags]=c[n.tags]?c[n.tags]:[],c[n.tags].push(n)):n.tags.map(function(e){c[e]=c[e]?c[e]:[],c[e].push(n)})});var l=(r=c[n]).length;return r=r.filter(function(n,a){return a+1>t*e-e&&a+1<=t*e}),{total:l,pageSize:e,pageNo:t,type:a,name:n,postList:r}}},eMPP:function(n,e,t){var a=t("ftsO");"string"==typeof a&&(a=[[n.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t("aET+")(a,r);a.locals&&(n.exports=a.locals)},ftsO:function(n,e,t){(n.exports=t("JPst")(!1)).push([n.i,".component-content .inner {\n  width: 700px;\n  margin: 0 auto;\n}\n.component-content .inner .post h2.post-title {\n  text-align: center;\n  font-size: 26px;\n  margin: 0;\n}\n.component-content .inner .post .post-meta {\n  text-align: center;\n  margin-bottom: 60px;\n}\n.component-content .inner .post .post-body {\n  margin-bottom: 60px;\n}\n.component-content .inner .post .post-body h1,\n.component-content .inner .post .post-body h2,\n.component-content .inner .post .post-body h3 {\n  line-height: 1;\n  padding-bottom: 8px;\n  border-bottom: 1px dotted #ccc;\n}\n.component-content .inner .post .post-body h2 {\n  font-size: 20px;\n}\n.component-content .inner .pagination {\n  padding-top: 15px;\n  margin: 120px 0 40px;\n  text-align: center;\n  border-top: 1px solid #eee;\n}\n",""])},hIh8:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=t("1M3H"),r=t("FIf5");t("HYly");var o=new a({highlight:function(n,e){if(e&&r.getLanguage(e))try{return'<pre class="hljs"><code>'+r.highlight(e,n,!0).value+"</code></pre>"}catch(n){}return'<pre class="hljs"><code>'+o.utils.escapeHtml(n)+"</code></pre>"}});e.renderWithMarkdown=function(n){return o.render(n)}},k90v:function(n){n.exports={siteTitle:"猪年奔跑的前端小伙伴",description:"A site that records our tears, laugh and grow.",copyright:"@猪年奔跑的前端小伙伴",link:"http://github.com",bodyContent:"",bodyHtml:"",dir:"generate",base:"index.json",ext:".json",sourceBase:"index.md",sourceExt:".md"}},"keV+":function(n){n.exports={title:"数据服务层(实验性)",createAt:"2019-04-16T10:07:10.000Z",updateAt:"2019-04-17T10:07:11.000Z",tags:"前端",author:"lian",content:"# 简介\n\n何为网站？前端获取数据，加以恰当样式，呈现于用户，如此构成网站之雏形。\n\n然而前端渲染层获取数据，不宜直接取之于数据源。  \n数据源数据多且杂，宜增加一服务层，接管数据之增删改查，对外提供抽象一致接口。\n\n\x3c!-- more --\x3e\n\n# 相关接口\n\n服务层提供接口，分类归总如下\n\n## 首页\n\n1、网站基本信息  \n函数：siteBaseInfo  \n入参：none  \n出参：title,description,copyright(网站标题，副标题，版权拥有者)\n\n2、文章列表  \n函数：postList  \n入参：pageSize,pageNo(每页数量，当前页码)  \n出参：total,pageSize,pageNo,postList{postId,title,tags,createAt,preview}  \n(总数,文章列表{文章 ID，标题，标签，创建时间，预览内容})\n\n3、搜索文章  \n函数：postSearch  \n入参：keyword  \n出参：total,postList{title,content,postId}\n\n## 文章页\n\n1、文章详情  \n函数：postDetail  \n入参：postId  \n出参：postId,title,tags,createAt,updateAt,preview,content  \n(文章 ID，标题，标签，创建时间，修改时间，预览内容，完整内容)\n\n## 归档页\n\n1、归档文章列表  \n函数：postArchive  \n入参：pageSize,pageNo,type=year  \n出参：total,pageSize,pageNo,[year]:{createAt,title}  \n(总数，年份{创建时间，标题})\n\n## 分类页\n\n1、分类列表  \n函数：postCategory  \n入参：none  \n出参：total,categoryList{title,count}  \n(总数，分类列表{题目，数量})\n\n2、分类详情  \n函数：postDetailCategory  \n入参：pageSize,pageNo,category  \n出参：total,title,postList{createAt,title}\n\n## 关于页\n\n## 招聘页\n\n(待续)",preview:"# 简介\n\n何为网站？前端获取数据，加以恰当样式，呈现于用户，如此构成网站之雏形。\n\n然而前端渲染层获取数据，不宜直接取之于数据源。  \n数据源数据多且杂，宜增加一服务层，接管数据之增删改查，对外提供抽象一致接口。\n\n"}},lcJ5:function(n){n.exports={title:"ECMAScript 8 新特性",createAt:"2019-04-15T10:07:10.000Z",updateAt:"2019-04-17T10:07:11.000Z",tags:"前端",author:"lian",content:'# \bECMAScript 8\n\n1、添加 String.padStart 和 String.padEnd\n功能：填充字符串，以达到指定长度。\n\n- 当指定长度小于等于原字符串长度时，返回原字符串\n- 当指定长度大于原字符串长度时，用指定字符串填充，若是未指定字符串，则用空字符填充。\n  示例\n\n```js\n// 前置填充\n"es8".padStart(5) => "  es8"\n\n"es8".padStart(5,"lian") => "lies8"\n// 后置填充\n"es8".padEnd(5) => "es8  "\n\n"es8".padEnd(5,"lian") => "es8li"\n```\n\n\x3c!-- more --\x3e\n\n2、添加 Object.values 和 Object.entries\n功能：返回指定对象的枚举属性值（属性，值）的数组\n示例：\n\n```js\nconst obj = {x:1,y:2}\nObject.values(obj) => [1,2]\n\nObject.entries(obj) => [[x,1],[y,2]]\n```\n\n3、添加 Object.getOwnPropertyDescriptors\n功能：返回指定对象的所有属性描述符\n示例：\n\n```js\nconst obj = {\n  get age(){\n    return 10;\n  }\n}\nObject.getOwnPropertyDescriptors(obj) =>\n{age:{configurable:true,enumerable:true,get:function age(){},set:undefined}}\n```\n\n4、增强字符串模版\n示例：\n\n```js\nconst version = 8;\nfunction helper(strs,...keys){\n  const addit = keys[0]===8? "better":"good";\n  return `${strs[0]} ${keys[0]} ${strs[1]} ${addit}`\n}\n\nhelper `ES ${version} is` => ES8 is better\n```\n\n(待续)',preview:'# \bECMAScript 8\n\n1、添加 String.padStart 和 String.padEnd\n功能：填充字符串，以达到指定长度。\n\n- 当指定长度小于等于原字符串长度时，返回原字符串\n- 当指定长度大于原字符串长度时，用指定字符串填充，若是未指定字符串，则用空字符填充。\n  示例\n\n```js\n// 前置填充\n"es8".padStart(5) => "  es8"\n\n"es8".padStart(5,"lian") => "lies8"\n// 后置填充\n"es8".padEnd(5) => "es8  "\n\n"es8".padEnd(5,"lian") => "es8li"\n```\n\n'}},m7Az:function(n,e,t){"use strict";function a(n){for(var e=348,t=32768;t>8;t>>=1)e+=c[n-1900]&t?1:0;return e+o(n)}function r(n){return 15&c[n-1900]}function o(n){return 0===r(n)?0:65536&c[n-1900]?30:29}function s(n,e){return c[n-1900]&65536>>e?30:29}Object.defineProperty(e,"__esModule",{value:!0}),e.toLunarYearMonthDay=function(n,e,t){for(var c=new Date(n,e-1,t),l=(Date.UTC(c.getFullYear(),c.getMonth(),c.getDate())-Date.UTC(1900,0,31))/i,p={year:0,month:0,day:0},u=1900;u<2101;u++){if(!(l-a(u)>0)){p.year=u;break}l-=a(u)}var b=r(p.year),d=!1;for(u=1;u<13;u++){var f=0;if(!d&&b>0&&u===b+1?(f=o(p.year),d=!0,u--):f=s(p.year,u),!(l>f)){p.month=u;break}l-=f}return p.day=l+1,p},e.lunarYearDays=a;var i=864e5,c=[19416,19168,42352,21717,53856,55632,91476,22176,39632,21970,19168,42422,42192,53840,119381,46400,54944,44450,38320,84343,18800,42160,46261,27216,27968,109396,11104,38256,21234,18800,25958,54432,59984,28309,23248,11104,100067,37600,116951,51536,54432,120998,46416,22176,107956,9680,37584,53938,43344,46423,27808,46416,86869,19872,42416,83315,21168,43432,59728,27296,44710,43856,19296,43748,42352,21088,62051,55632,23383,22176,38608,19925,19152,42192,54484,53840,54616,46400,46752,103846,38320,18864,43380,42160,45690,27216,27968,44870,43872,38256,19189,18800,25776,29859,59984,27480,23232,43872,38613,37600,51552,55636,54432,55888,30034,22176,43959,9680,37584,51893,43344,46240,47780,44368,21977,19360,42416,86390,21168,43312,31060,27296,44368,23378,19296,42726,42208,53856,60005,54576,23200,30371,38608,19195,19152,42192,118966,53840,54560,56645,46496,22224,21938,18864,42359,42160,43600,111189,27936,44448,84835,37744,18936,18800,25776,92326,59984,27424,108228,43744,41696,53987,51552,54615,54432,55888,23893,22176,42704,21972,21200,43448,43344,46240,46758,44368,21920,43940,42416,21168,45683,26928,29495,27296,44368,84821,19296,42352,21732,53600,59752,54560,55968,92838,22224,19168,43476,41680,53584,62034,54560]},nenN:function(n){n.exports={title:"Hello world",createAt:"2019-05-07T16:25:36.000Z",updateAt:"2019-05-07T16:25:36.000Z",tags:null,category:null,author:null,content:"# world\n\nHello world\n\n\x3c!-- more --\x3e",preview:"# world\n\nHello world\n\n"}},nhhK:function(n){n.exports={title:"构建利器 Webpack",createAt:"2019-05-07T21:13:48.000Z",updateAt:"2019-05-07T21:13:48.000Z",tags:null,category:null,author:null,content:'## 简介\n\nwebpack 是一个 JavaScript 程序的静态模块打包器。\n\n其工作原理是：webpack 以递归方式构建一个关系依赖图，囊括 JavaScript 程序需要的各个模块，然后将这些模块打包成一个或多个依赖包(bundle)。\n\n\x3c!-- more --\x3e\n\n## 配置矩阵\n\nwebpack 配置的组成矩阵：入口 entry，输出 output，加载器 loader，插件 plugin。\n\n## 入口\n\n用法:\n\n```js\n// 简写语法\nentry: string | string[]\n// 对象语法\nentry: {\n  [entryChunkName: string]: string | string[]\n}\n```\n\n## 输出\n\n用法：\n\n```js\n// 简写语法\noutput: {\n  filename:  string,\n  path: string,\n  publicPath: string\n}\n\n// 示例\n{\n  entry: {\n    app: \'./src/app.js\',\n    search: \'./src/search.js\'\n  },\n  output: {\n    filename: \'[name].js\',\n    path: __dirname + \'/dist\'\n  }\n}\n\n// 写入到硬盘：./dist/app.js, ./dist/search.js\n```\n\n## 模式(补充)\n\n配置模式 mode，告知 webpack 使用相应模式的内置优化。\n\n```js\n// 用法\n{\n  mode: "development" | "production";\n}\n\n// 示例\nmodule.exports = {\n  mode: "development"\n};\n// development 等效于\nmodule.exports = {\n  plugins: [\n    new webpack.NamedModulesPlugin(),\n    new webpack.DefinePlugin({\n      "process.env.NODE_ENV": JSON.stringify("development")\n    })\n  ]\n};\nmodule.exports = {\n  mode: "production"\n};\n// production 等效于\nmodule.exports = {\n  plugins: [\n    new UglifyJsPlugin(/* ... */),\n    new webpack.DefinePlugin({\n      "process.env.NODE_ENV": JSON.stringify("production")\n    }),\n    new webpack.optimize.ModuleConcatenationPlugin(),\n    new webpack.NoEmitOnErrorsPlugin()\n  ]\n};\n```\n\n## 加载器\n\n加载器，允许你在加载文件时对文件进行预处理。\n整体配置如下：\n1、安装依赖包，如 ts-loader\n\n```bash\nnpm install --save-dev ts-loader\n```\n\n2、在配置文件 webpack.config.js 上，添加内容\n\n```js\n{\n  module: {\n    rules: [{ test: /\\.ts$/, use: "ts-loader" }];\n  }\n}\n```\n\n## 插件\n\n插件是 webpack 的核心功能。其本质是一个 JavaScript 对象，内置一个 apply 方法，通过此方法可访问 webpack 的 compiler 对象。\n\n示例：\n\n```js\nconst pluginName = "ConsoleLogOnBuildWebpackPlugin";\n\nclass ConsoleLogOnBuildWebpackPlugin {\n  apply(compiler) {\n    compiler.hooks.run.tap(pluginName, compilation => {\n      console.log("webpack 构建过程开始！");\n    });\n  }\n}\n```\n\n整体配置如下：\n1、安装依赖包\n\n```bash\nnpm install --save-dev html-webpack-plugin\n```\n\n2、在配置文件 babel.config.js 上，添加内容\n\n```js\nconst HtmlWebpackPlugin = require("html-webpack-plugin");\n\nconst config = {\n  plugins: [new HtmlWebpackPlugin({ template: "./src/index.html" })]\n};\n\nmodule.exports = config;\n```\n\n## web 服务器\n\nwebpack 提供一个简单的 web 服务器 webpack-dev-server，让我们在开发时启动 web 服务。\n\n整体配置如下：\n\n1、安装依赖包\n\n```bash\nnpm i --save-dev webpack-dev-server webpack-merge\n```\n\n2、在配置文件 package.json 上，添加内容\n\n```json\n{\n  "scripts": {\n    "dev": "webpack-dev-server --open --config webpack.config.js"\n  }\n}\n```\n\n3、在配置文件 webpack.config.js 上，添加内容\n\n```js\n{\n  // 使用 source map\n  devtool:\'inline-source-map\',\n  // 服务器参数\n  devServer:{\n    contentBase:"./dist"\n  }\n}\n```\n\n## 实践\n\n1、安装依赖包\n\n```bash\nnpm install --save-dev webpack webpack-cli webpack-merge\n```\n\n2、配置启动命令\n在配置文件 package.json 上，添加内容\n\n```js\n{\n  "scripts":{\n    "start":"webpack --config webpack.config.js"\n  }\n}\n```\n\n3、添加解析规则\n在配置文件 webpack.config.js 上，添加内容\n\n```js\n{\n  "resolve": {\n    extensions:[\'.js\',\'.ts\',\'.tsx\'],\n    alias:{\n      "@": path.resolve(__dirname, \'src/\'),\n      utils: path.resolve(__dirname,\'src/utils/\')\n    }\n  }\n}\n```\n\n## 常用加载器(附录)\n\n1、加载 css\n\n```js\n// 安装依赖包\nnpm install --save-dev style-loader css-loader\n\n// 在配置文件 webpack.config.js 上，添加内容\n{\n  test:/\\.css$/,\n  use:[\n    \'style-loader\',\n    \'css-loader\'\n  ]\n}\n```\n\n2、加载 less\n\n```js\n// 安装依赖包\nnpm install --save-dev less-loader less\n\n// 在配置文件 webpack.config.js 上，添加内容\n{\n  test:/\\.less$/,\n  use: [\n    {\n      loader: "style-loader"\n    },\n    {\n      loader: "css-loader"\n    },\n    {\n      loader: "less-loader"\n    }\n  ]\n}\n```\n\n3、加载图片\n\n```js\n// 安装依赖包\nnpm install --save-dev file-loader\n\n// 在配置文件 webpack.config.js 上，添加内容\n{\n  test: /\\.(png|svg|jpg|gif)$/,\n  use:\'file-loader\'\n}\n\n```\n\n4、加载 ts\n\n```js\n// 安装依赖包\nnpm install --save-dev ts-loader\n\n// 在配置文件 webpack.config.js 上，添加内容\n{\n  test: /\\.tsx?$/,\n  use:\'ts-loader\'\n}\n```\n\n5、加载 ts\n\n```js\n// 安装依赖包\nnpm install --save-dev awesome-typescript-loader\n\n\n// 在配置文件 webpack.config.js 上，添加内容\n{\n  test: /\\.tsx?$/,\n  use:\'awesome-typescript-loader\'\n},\n{\n  enforce:"pre",\n  test:/\\.js$/,\n  loader:"source-map-loader"\n}\n```\n\n6、加载 json\n\n```js\n// 安装依赖包\nnpm install --save-dev json-loader\n\n\n// 在配置文件 webpack.config.js 上，添加内容\n{\n  test: /\\.json$/,\n  use:\'json-loader\'\n}\n```\n\n7、加载 html\n\n```js\n// 安装依赖包\nnpm install --save-dev html-loader\n\n// 在配置文件 webpack.config.js 上，添加内容\n\n{\n  test: /\\.html$/,\n  use: [\n    {\n      loader: "html-loader",\n      options: {\n        minimize: true\n      }\n    }\n  ]\n}\n```\n\n## 常见插件(附录)\n\n1、html-webpack-plugin\n\n```js\n// 安装依赖包\nnpm install --save-dev html-webpack-plugin\n\n// 在配置文件 webpack.config.js 上，添加内容\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\n\nconst config = {\n  plugins:[\n    new HtmlWebpackPlugin({\n      filename: "index.html",\n      template: "./src/index.html",\n      inject: true\n      })\n  ]\n}\n```\n\n2、clean-webpack-plugin\n\n```js\n// 安装依赖包\nnpm install --save-dev clean-webpack-plugin\n\n// 在配置文件 webpack.config.js 上，添加内容\nconst CleanWebpackPlugin = require(\'clean-webpack-plugin\');\n\nconst config = {\n  plugins:[\n    new CleanWebpackPlugin([\'dist\'])\n  ]\n}\n\n```\n\n3、uglifyjs-webpack-plugin\n\n```js\n// 安装依赖包\nnpm install --save-dev uglifyjs-webpack-plugin\n\n// 在配置文件 webpack.config.js 上，添加内容\nconst UglifyJSPlugin = require("uglifyjs-webpack-plugin");\n\nconst config = {\n  plugins:[\n        new UglifyJSPlugin({\n      uglifyOptions: {\n        compress: {\n          drop_console: true\n        }\n      },\n      sourceMap: true\n    }),\n  ]\n}\n```\n\n4、copy-webpack-plugin\n\n```js\n// 安装依赖包\nnpm install --save-dev copy-webpack-plugin\n\n// 在配置文件 webpack.config.js 上，添加内容\nconst CopyWebpackPlugin = require("copy-webpack-plugin");\n\nconst config = {\n    plugins: [\n    new CopyWebpackPlugin([{ from: "src/images", to: "images" }])\n  ]\n}\n```\n\n5、webpack-bundle-analyzer\n\n```js\n// 安装依赖包\nnpm install --save-dev webpack-bundle-analyzer\n\n// 在配置文件 webpack.config.js 上，添加内容\nconst BundleAnalyzerPlugin = require(\'webpack-bundle-analyzer\').BundleAnalyzerPlugin;\n\n\nconst config = {\n    plugins: [\n    new BundleAnalyzerPlugin()\n  ]\n}\n```\n\n(完)',preview:"## 简介\n\nwebpack 是一个 JavaScript 程序的静态模块打包器。\n\n其工作原理是：webpack 以递归方式构建一个关系依赖图，囊括 JavaScript 程序需要的各个模块，然后将这些模块打包成一个或多个依赖包(bundle)。\n\n"}},p1ld:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=t("q1tI"),r=t("55Ip"),o=t("MLMA"),s=t("gdfu");t("eMPP"),e.Content=function(n){return a.createElement("div",{className:"component-content"},a.createElement("div",{className:"inner"},a.createElement("div",null,n.postList.postList.map(function(n){return a.createElement("div",{className:"post",key:n.title},a.createElement(r.Link,{to:"/post?postId="+n.postId},a.createElement("h2",{className:"post-title"},n.title)),a.createElement("div",{className:"post-meta"},"发表于 ",o.formatDateTime(n.createAt)," | 分类于"," ",a.createElement(r.Link,{to:"/tag"},n.tags)),a.createElement("div",{className:"post-body"},a.createElement("div",{dangerouslySetInnerHTML:{__html:o.renderWithMarkdown(n.preview)}})))}),a.createElement("div",{className:"pagination"},a.createElement(s.Pagination,{current:n.postList.pageNo,total:n.postList.total})))))},e.default=e.Content},qOw0:function(n,e,t){var a={"./App":"HG3P","./App.tsx":"HG3P","./components/Hello":"PLjV","./components/Hello.tsx":"PLjV","./components/content":"p1ld","./components/content/":"p1ld","./components/content/index":"p1ld","./components/content/index.less":"eMPP","./components/content/index.tsx":"p1ld","./components/footer":"OCm5","./components/footer/":"OCm5","./components/footer/index":"OCm5","./components/footer/index.less":"DwpH","./components/footer/index.tsx":"OCm5","./components/header":"B+IG","./components/header/":"B+IG","./components/header/index":"B+IG","./components/header/index.less":"3EeK","./components/header/index.tsx":"B+IG","./components/postdetail":"s8j5","./components/postdetail/":"s8j5","./components/postdetail/index":"s8j5","./components/postdetail/index.less":"CiZo","./components/postdetail/index.tsx":"s8j5","./index.html":"bQRy","./main":"QqCh","./main.tsx":"QqCh","./public":"k90v","./public/":"k90v","./public/generate":"8kfy","./public/generate/":"8kfy","./public/generate/index":"8kfy","./public/generate/index.json":"8kfy","./public/generate/summary":"DQxI","./public/generate/summary.json":"DQxI","./public/generate/tech/ecmascript":"zghp","./public/generate/tech/ecmascript.json":"zghp","./public/generate/tech/es10":"QiMX","./public/generate/tech/es10.json":"QiMX","./public/generate/tech/es7":"bC3G","./public/generate/tech/es7.json":"bC3G","./public/generate/tech/es8":"lcJ5","./public/generate/tech/es8.json":"lcJ5","./public/generate/tech/es9":"keV+","./public/generate/tech/es9.json":"keV+","./public/generate/tech/haskellOverview":"EYJa","./public/generate/tech/haskellOverview.json":"EYJa","./public/generate/tech/lian/es10":"V3o4","./public/generate/tech/lian/es10.json":"V3o4","./public/generate/tech/lian/es7":"wWol","./public/generate/tech/lian/es7.json":"wWol","./public/generate/tech/lian/es8":"Yiz8","./public/generate/tech/lian/es8.json":"Yiz8","./public/generate/tech/lian/es9":"U4t2","./public/generate/tech/lian/es9.json":"U4t2","./public/generate/tech/macTool":"N8tG","./public/generate/tech/macTool.json":"N8tG","./public/generate/tech/markdownService":"2Kwb","./public/generate/tech/markdownService.json":"2Kwb","./public/generate/tech/temp":"t4Je","./public/generate/tech/temp.json":"t4Je","./public/generate/tech/webpack":"nhhK","./public/generate/tech/webpack.json":"nhhK","./public/generate/tech/wusen":"TW1i","./public/generate/tech/wusen.json":"TW1i","./public/generate/tech/创建新文件":"y1aA","./public/generate/tech/创建新文件.json":"y1aA","./public/generate/tech/标题":"nenN","./public/generate/tech/标题.json":"nenN","./public/images/bandwidth.png":"EsqA","./public/index":"k90v","./public/index.json":"k90v","./service":"xXJP","./service/":"xXJP","./service/index":"xXJP","./service/index.tsx":"xXJP","./service/mei":"zWc5","./service/mei.tsx":"zWc5","./service/post":"d4DY","./service/post.tsx":"d4DY","./stores/reducers":"z0N/","./stores/reducers/":"z0N/","./stores/reducers/index":"z0N/","./stores/reducers/index.tsx":"z0N/","./style":"zSLb","./style/":"zSLb","./style/index":"zSLb","./style/index.less":"zSLb","./types/mei.d":"Gf5M","./types/mei.d.tsx":"Gf5M","./types/post.d":"6AAB","./types/post.d.tsx":"6AAB","./utils":"MLMA","./utils/":"MLMA","./utils/calendar":"m7Az","./utils/calendar.tsx":"m7Az","./utils/constant":"cW3K","./utils/constant.tsx":"cW3K","./utils/date":"AOeF","./utils/date.tsx":"AOeF","./utils/index":"MLMA","./utils/index.tsx":"MLMA","./utils/render":"hIh8","./utils/render.tsx":"hIh8","./utils/vendor/calendar":"0TFo","./utils/vendor/calendar.ts":"0TFo","./views/hello":"GNV3","./views/hello/":"GNV3","./views/hello/index":"GNV3","./views/hello/index.less":"13KQ","./views/hello/index.tsx":"GNV3","./views/index":"+LKy","./views/index/":"+LKy","./views/index/index":"+LKy","./views/index/index.less":"Iw/T","./views/index/index.tsx":"+LKy","./views/post":"QtWG","./views/post/":"QtWG","./views/post/index":"QtWG","./views/post/index.less":"WqLS","./views/post/index.tsx":"QtWG"};function r(n){var e=o(n);return t(e)}function o(n){if(!t.o(a,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return a[n]}r.keys=function(){return Object.keys(a)},r.resolve=o,n.exports=r,r.id="qOw0"},s8j5:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=t("q1tI"),r=t("55Ip"),o=t("MLMA");t("CiZo"),e.Content=function(n){return a.createElement("div",{className:"component-content"},a.createElement("div",{className:"inner"},a.createElement("div",null,a.createElement("div",{className:"post"},a.createElement("h2",{className:"post-title"},n.postDetail.title),a.createElement("div",{className:"post-meta"},"发表于 ",o.formatDateTime(n.postDetail.createAt)," | 分类于"," ",a.createElement(r.Link,{to:"/tag"},n.postDetail.tags)),a.createElement("div",{className:"post-body"},a.createElement("div",{dangerouslySetInnerHTML:{__html:o.renderWithMarkdown(n.postDetail.content)}}))))))},e.default=e.Content},t4Je:function(n){n.exports={title:"第一个编译器",createAt:"2019-05-07T18:29:28.000Z",updateAt:"2019-05-07T18:29:28.000Z",tags:null,category:null,author:null,content:"# temp\n\n\x3c!-- more --\x3e",preview:"# temp\n\n"}},wWol:function(n){n.exports={title:"ECMAScript 7 品鲜",createAt:"2018-04-08T10:07:10.000Z",updateAt:"2018-04-08T10:07:11.000Z",tags:"前端",author:"lian",content:"# \bECMAScript 7 品鲜\n\n1、添加 Array.prototype.includes 函数\n功能：判断是否包含某个元素。\n\n需要注意的是，includes 函数与 indexOf()函数功能类似，其用法辨析如下：\n\n```js\n// 当元素为NaN时\n  [NaN].includes(NaN) => true\n  [NaN].indexOf(NaN) => -1\n\n// 当元素为 +0 与 -0 时\n  [+0].includes(-0) => true\n  [+0].indexOf(-0) => 0\n```\n\n\x3c!-- more --\x3e\n\n2、添加取幂运算符号 \\*\\*\n示例：\n\n```js\n2 \\*\\* 3 === Math.pow(2,3) => true, 8\n```\n\n(待续)",preview:"# \bECMAScript 7 品鲜\n\n1、添加 Array.prototype.includes 函数\n功能：判断是否包含某个元素。\n\n需要注意的是，includes 函数与 indexOf()函数功能类似，其用法辨析如下：\n\n```js\n// 当元素为NaN时\n  [NaN].includes(NaN) => true\n  [NaN].indexOf(NaN) => -1\n\n// 当元素为 +0 与 -0 时\n  [+0].includes(-0) => true\n  [+0].indexOf(-0) => 0\n```\n\n"}},xXJP:function(n,e,t){"use strict";function a(n){for(var t in n)e.hasOwnProperty(t)||(e[t]=n[t])}Object.defineProperty(e,"__esModule",{value:!0}),a(t("d4DY")),a(t("zWc5"))},y1aA:function(n){n.exports={title:"创建新文件",createAt:"2019-05-07T16:32:59.000Z",updateAt:"2019-05-07T16:32:59.000Z",tags:null,category:null,author:null,content:"# 创建新文件\n\n\x3c!-- more --\x3e",preview:"# 创建新文件\n\n"}},"z0N/":function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=t("ANjH"),r={postList:[]};function o(n,e){switch(void 0===n&&(n=r),e.type){case"FETCH_POST":return{postList:n.postList.concat([e.payload])}}return n}e.postReducer=o;var s=a.combineReducers({posts:o});e.default=s},zSLb:function(n,e,t){var a=t("AVg6");"string"==typeof a&&(a=[[n.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t("aET+")(a,r);a.locals&&(n.exports=a.locals)},zWc5:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=t("m7Az");e.baGua=[{name:"乾",code:1,wuxing:"金",bit:7},{name:"兑",code:2,wuxing:"金",bit:3},{name:"离",code:3,wuxing:"火",bit:5},{name:"震",code:4,wuxing:"木",bit:1},{name:"巽",code:5,wuxing:"木",bit:6},{name:"坎",code:6,wuxing:"水",bit:2},{name:"艮",code:7,wuxing:"土",bit:4},{name:"坤",code:8,wuxing:"土",bit:0}],e.diZhi=[{name:"子",animal:"鼠",code:1},{name:"丑",animal:"鼠",code:2},{name:"寅",animal:"虎",code:3},{name:"卯",animal:"兔",code:4},{name:"辰",animal:"龙",code:5},{name:"巳",animal:"蛇",code:6},{name:"午",animal:"马",code:7},{name:"未",animal:"羊",code:8},{name:"申",animal:"猴",code:9},{name:"酉",animal:"鸡",code:10},{name:"戌",animal:"狗",code:11},{name:"亥",animal:"猪",code:12}];var r={0:"初",1:"十",2:"廿",3:"三"},o={1:"一",2:"二",3:"三",4:"四",5:"五",6:"六",7:"七",8:"八",9:"九",0:"十"};function s(n){var t=(n-3)%12;return t=0===t?12:t,e.diZhi[t-1]}function i(n,e,t){var i=a.toLunarYearMonthDay(n,e,t);return{year:s(i.year).name+"年",yearCode:s(i.year).code,month:o[i.month%10]+"月",monthCode:i.month,day:r[Math.floor(i.day/10)]+o[i.day%10]+"日",dayCode:i.day}}function c(n,t,a){for(var r,o,s=0,i=e.baGua;s<i.length;s++){var c=i[s];c.name===n&&(r=c),c.name===t&&(o=c)}return{shang:a>3?l(n,a-3):r,xia:a>3?o:l(t,a)}}function l(n,t){for(var a=7,r=0,o=e.baGua;r<o.length;r++){(b=o[r]).name===n&&(a=b.bit)}a^=1<<t-1;for(var s,i="",c=0,l=e.baGua;c<l.length;c++){(b=l[c]).bit===a&&(i=b.name)}for(var p=0,u=e.baGua;p<u.length;p++){var b;(b=u[p]).name==i&&(s=b)}return s}function p(n,t){for(var a,r,o,s,i=0,c=e.baGua;i<c.length;i++){(f=c[i]).name===n&&(a=f),f.name===t&&(r=f)}for(var l=a.bit<<3+r.bit,p={bit:l>>2&7},u={bit:l>>1&7},b=0,d=e.baGua;b<d.length;b++){var f;(f=d[b]).bit===p.bit&&(o=f),f.bit===u.bit&&(s=f)}return{shang:o,xia:s}}e.toZhiYear=s,e.toZhiYMD=i,e.time2gua=function(n,t,a,r){var o=Math.floor((r+3)/2);o=13===o?1:o;var s=i(n,t,a),l=(s.yearCode+s.monthCode+s.dayCode)%8;l=0===l?8:l;var u=(s.yearCode+s.monthCode+s.dayCode+o)%8;u=0===u?8:u;var b=(s.yearCode+s.monthCode+s.dayCode+o)%6;b=0===b?6:b;var d={shang:e.baGua[l-1],xia:e.baGua[u-1]};return{ben:d,bian:c(d.shang.name,d.xia.name,b),hu:p(d.shang.name,d.xia.name),change:b,time:""+s.year+s.month+s.day+e.diZhi[o-1].name+"时"}},e.bianGua=c,e._bianGua=l,e.huGua=p,e.currentTime=function(){var n=new Date;return{year:n.getFullYear(),month:n.getMonth()+1,day:n.getDate(),hour:n.getHours()}},e.digit2gua=function(n,t){var a=Math.floor((t+3)/2),r=n%8;r=0===r?8:r;var o=(a=13===a?1:a)%8;o=0===o?8:o;var s=(n+a)%6;s=0===s?6:s;var i={shang:e.baGua[r-1],xia:e.baGua[o-1]};return{ben:i,bian:c(i.shang.name,i.xia.name,s),hu:p(i.shang.name,i.xia.name),change:s}}},zghp:function(n){n.exports={title:"ECMAScript 2015-2019 概览",createAt:"2019-05-07T20:55:23.000Z",updateAt:"2019-05-07T20:55:23.000Z",tags:null,category:null,author:null,content:'## ECMAScript 2015\n\n1、添加 Array.prototype.includes 函数\n功能：判断是否包含某个元素。\n\n需要注意的是，includes 函数与 indexOf()函数功能类似，其用法辨析如下：\n\n```js\n// 当元素为NaN时\n  [NaN].includes(NaN) => true\n  [NaN].indexOf(NaN) => -1\n\n// 当元素为 +0 与 -0 时\n  [+0].includes(-0) => true\n  [+0].indexOf(-0) => 0\n```\n\n\x3c!-- more --\x3e\n\n2、添加取幂运算符号 \\*\\*\n示例：\n\n```js\n2 \\*\\* 3 === Math.pow(2,3) => true, 8\n```\n\n## ECMAScript 2016\n\n1、添加 String.padStart 和 String.padEnd\n功能：填充字符串，以达到指定长度。\n\n- 当指定长度小于等于原字符串长度时，返回原字符串\n- 当指定长度大于原字符串长度时，用指定字符串填充，若是未指定字符串，则用空字符填充。\n  示例\n\n```js\n// 前置填充\n"es8".padStart(5) => "  es8"\n\n"es8".padStart(5,"lian") => "lies8"\n// 后置填充\n"es8".padEnd(5) => "es8  "\n\n"es8".padEnd(5,"lian") => "es8li"\n```\n\n2、添加 Object.values 和 Object.entries\n功能：返回指定对象的枚举属性值（属性，值）的数组\n示例：\n\n```js\nconst obj = {x:1,y:2}\nObject.values(obj) => [1,2]\n\nObject.entries(obj) => [[x,1],[y,2]]\n```\n\n3、添加 Object.getOwnPropertyDescriptors\n功能：返回指定对象的所有属性描述符\n示例：\n\n```js\nconst obj = {\n  get age(){\n    return 10;\n  }\n}\nObject.getOwnPropertyDescriptors(obj) =>\n{age:{configurable:true,enumerable:true,get:function age(){},set:undefined}}\n```\n\n4、增强字符串模版\n示例：\n\n```js\nconst version = 8;\nfunction helper(strs,...keys){\n  const addit = keys[0]===8? "better":"good";\n  return `${strs[0]} ${keys[0]} ${strs[1]} ${addit}`\n}\n\nhelper `ES ${version} is` => ES8 is better\n```',preview:"## ECMAScript 2015\n\n1、添加 Array.prototype.includes 函数\n功能：判断是否包含某个元素。\n\n需要注意的是，includes 函数与 indexOf()函数功能类似，其用法辨析如下：\n\n```js\n// 当元素为NaN时\n  [NaN].includes(NaN) => true\n  [NaN].indexOf(NaN) => -1\n\n// 当元素为 +0 与 -0 时\n  [+0].includes(-0) => true\n  [+0].indexOf(-0) => 0\n```\n\n"}}},[["QqCh",1,2]]]);
//# sourceMappingURL=app.js.map